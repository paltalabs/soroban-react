"use strict";var r=require("@stellar/freighter-api"),e=require("../types.cjs"),s=require("../utils.cjs"),t=require("buffer");const n="freighter";exports.FREIGHTER_ID=n,exports.FreighterModule=class{constructor(){this.moduleType=e.ModuleType.HOT_WALLET,this.productId=n,this.productName="Freighter",this.productUrl="https://freighter.app",this.productIcon="https://stellar.creit.tech/wallet-icons/freighter.png"}async runChecks(){if(!await this.isAvailable())throw new Error("Freighter is not connected")}async isAvailable(){return r.isConnected().then((({isConnected:r,error:e})=>!e&&r)).catch((()=>!1))}async getAddress(){return this.runChecks().then((()=>r.requestAccess())).then((()=>r.getAddress())).then((({address:r,error:e})=>{if(e)throw e;return{address:r}})).catch((r=>{throw s.parseError(r)}))}async signTransaction(e,t){return this.runChecks().then((async()=>{const{signedTxXdr:s,signerAddress:n,error:a}=await r.signTransaction(e,{address:t?.address,networkPassphrase:t?.networkPassphrase});if(a)throw a;return{signedTxXdr:s,signerAddress:n}})).catch((r=>{throw s.parseError(r)}))}async signAuthEntry(e,n){return this.runChecks().then((async()=>{const{signedAuthEntry:s,signerAddress:a,error:i}=await r.signAuthEntry(e,{address:n?.address,networkPassphrase:n?.networkPassphrase});if(i||!s)throw i;return{signedAuthEntry:t.Buffer.from(s).toString("base64"),signerAddress:a}})).catch((r=>{throw s.parseError(r)}))}async signMessage(e,n){return this.runChecks().then((async()=>{const{signedMessage:s,signerAddress:a,error:i}=await r.signMessage(e,{address:n?.address,networkPassphrase:n?.networkPassphrase});if(i||!s)throw i;return{signedMessage:t.Buffer.from(s).toString("base64"),signerAddress:a}})).catch((r=>{throw s.parseError(r)}))}async getNetwork(){return this.runChecks().then((async()=>{const{network:e,networkPassphrase:s,error:t}=await r.getNetwork();if(t)throw t;return{network:e,networkPassphrase:s}})).catch((r=>{throw s.parseError(r)}))}};
//# sourceMappingURL=freighter.module.cjs.map
