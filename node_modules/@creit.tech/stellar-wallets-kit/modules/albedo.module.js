import t from"@albedo-link/intent";import{ModuleType as e,WalletNetwork as s}from"../types.js";import{parseError as o}from"../utils.js";const r="albedo";class n{constructor(){this.moduleType=e.HOT_WALLET,this.productId=r,this.productName="Albedo",this.productUrl="https://albedo.link/",this.productIcon="https://stellar.creit.tech/wallet-icons/albedo.png"}async isAvailable(){return!0}async getAddress(){return t.publicKey({}).then((t=>({address:t.pubkey}))).catch((t=>{throw o(t)}))}async signTransaction(e,r){return t.tx({xdr:e,pubkey:r?.address,network:r?.networkPassphrase?r.networkPassphrase===s.PUBLIC?"public":"testnet":void 0}).then((({signed_envelope_xdr:t})=>({signedTxXdr:t,signerAddress:r?.address}))).catch((t=>{throw o(t)}))}async signAuthEntry(){throw{code:-3,message:'Albedo does not support the "signAuthEntry" function'}}async signMessage(){throw{code:-3,message:'Albedo does not support the "signMessage" function'}}async getNetwork(){throw{code:-3,message:'Albedo does not support the "getNetwork" function'}}}var d=(t=>(t.PUBLIC="public",t.TESTNET="testnet",t))(d||{});export{r as ALBEDO_ID,n as AlbedoModule,d as AlbedoNetwork};
//# sourceMappingURL=albedo.module.js.map
