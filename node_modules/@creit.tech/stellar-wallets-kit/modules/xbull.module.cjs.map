{"version":3,"file":"xbull.module.cjs","sources":["../../src/modules/xbull.module.ts"],"sourcesContent":["import { xBullWalletConnect } from '@creit.tech/xbull-wallet-connect';\nimport { ModuleInterface, ModuleType } from '../types';\nimport { parseError } from '../utils';\n\nexport const XBULL_ID = 'xbull';\n\nexport class xBullModule implements ModuleInterface {\n  moduleType: ModuleType = ModuleType.HOT_WALLET;\n\n  productId: string = XBULL_ID;\n  productName: string = 'xBull';\n  productUrl: string = 'https://xbull.app';\n  productIcon: string = 'https://stellar.creit.tech/wallet-icons/xbull.png';\n\n  async isAvailable(): Promise<boolean> {\n    return true;\n  }\n\n  async getAddress(): Promise<{ address: string }> {\n    try {\n      const bridge: xBullWalletConnect = new xBullWalletConnect();\n      const publicKey: string = await bridge.connect();\n      bridge.closeConnections();\n      return { address: publicKey };\n    } catch (e: any) {\n      throw parseError(e);\n    }\n  }\n\n  async signTransaction(\n    xdr: string,\n    opts?: {\n      networkPassphrase?: string;\n      address?: string;\n      path?: string;\n      submit?: boolean;\n      submitUrl?: string;\n    }\n  ): Promise<{ signedTxXdr: string; signerAddress?: string }> {\n    try {\n      const bridge: xBullWalletConnect = new xBullWalletConnect();\n\n      const signedXdr: string = await bridge.sign({\n        xdr,\n        publicKey: opts?.address,\n        network: opts?.networkPassphrase,\n      });\n\n      bridge.closeConnections();\n      return { signedTxXdr: signedXdr, signerAddress: opts?.address };\n    } catch (e: any) {\n      throw parseError(e);\n    }\n  }\n\n  async signAuthEntry(): Promise<{ signedAuthEntry: string; signerAddress?: string }> {\n    throw {\n      code: -3,\n      message: 'xBull does not support the \"signAuthEntry\" function',\n    };\n  }\n\n  async signMessage(): Promise<{ signedMessage: string; signerAddress?: string }> {\n    throw {\n      code: -3,\n      message: 'xBull does not support the \"signMessage\" function',\n    };\n  }\n\n  async getNetwork(): Promise<{ network: string; networkPassphrase: string }> {\n    throw {\n      code: -3,\n      message: 'xBull does not support the \"getNetwork\" function',\n    };\n  }\n}\n"],"names":["XBULL_ID","constructor","this","moduleType","ModuleType","HOT_WALLET","productId","productName","productUrl","productIcon","isAvailable","getAddress","bridge","xBullWalletConnect","publicKey","connect","closeConnections","address","e","parseError","signTransaction","xdr","opts","signedXdr","sign","network","networkPassphrase","signedTxXdr","signerAddress","signAuthEntry","code","message","signMessage","getNetwork"],"mappings":"mHAIO,MAAMA,EAAW,+CAEjB,MAAA,WAAAC,GACLC,KAAAC,WAAyBC,EAAAA,WAAWC,WAEhBH,KAAAI,UAAAN,EACEE,KAAAK,YAAA,QACDL,KAAAM,WAAA,oBACCN,KAAAO,YAAA,mDAAA,CAEtB,iBAAMC,GACG,OAAA,CAAA,CAGT,gBAAMC,GACA,IACI,MAAAC,EAA6B,IAAIC,qBACjCC,QAA0BF,EAAOG,UAEhC,OADPH,EAAOI,mBACA,CAAEC,QAASH,SACXI,GACP,MAAMC,EAAAA,WAAWD,EAAC,CACpB,CAGF,qBAAME,CACJC,EACAC,GAQI,IACI,MAAAV,EAA6B,IAAIC,qBAEjCU,QAA0BX,EAAOY,KAAK,CAC1CH,MACAP,UAAWQ,GAAML,QACjBQ,QAASH,GAAMI,oBAIjB,OADAd,EAAOI,mBACA,CAAEW,YAAaJ,EAAWK,cAAeN,GAAML,eAC/CC,GACP,MAAMC,EAAAA,WAAWD,EAAC,CACpB,CAGF,mBAAMW,GACE,KAAA,CACJC,MAAM,EACNC,QAAS,sDACX,CAGF,iBAAMC,GACE,KAAA,CACJF,MAAM,EACNC,QAAS,oDACX,CAGF,gBAAME,GACE,KAAA,CACJH,MAAM,EACNC,QAAS,mDACX"}