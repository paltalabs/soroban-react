{"version":3,"file":"stellar-wallets-modal.cjs","sources":["../../../src/components/modal/stellar-wallets-modal.ts"],"sourcesContent":["import { LitElement, html, css } from 'lit';\nimport { styleMap } from 'lit/directives/style-map.js';\nimport { customElement, property, state } from 'lit/decorators.js';\nimport { ReactiveState } from '../../state/reactive-state';\nimport { allowedWallets$, modalTheme$ } from '../../state/store';\n\nimport { ISupportedWallet, IModalTheme } from '../../types';\nimport {\n  backdropStyles,\n  modalWalletsSection,\n  modalDialogBodyStyles,\n  modalDialogStyles,\n  modalHelpSection,\n  modalAnimations,\n} from './styles';\n\nexport enum ModalThemeType {\n  DARK = 'DARK',\n  LIGHT = 'LIGHT',\n}\n\nexport const ModalThemes: { [key in ModalThemeType]: IModalTheme } = {\n  DARK: {\n    bgColor: '#161616',\n    textColor: '#a0a0a0',\n    solidTextColor: '#ededed',\n    headerButtonColor: '#707070',\n    dividerColor: 'rgba(255, 255, 255, 0.15)',\n    helpBgColor: '#1c1c1c',\n    notAvailableTextColor: '#a0a0a0',\n    notAvailableBgColor: '#232323',\n    notAvailableBorderColor: '#343434',\n  },\n  LIGHT: {\n    bgColor: '#fcfcfc',\n    textColor: '#181818',\n    solidTextColor: '#000000',\n    headerButtonColor: '#8f8f8f',\n    dividerColor: 'rgba(0, 0, 0, 0.15)',\n    helpBgColor: '#f8f8f8',\n    notAvailableTextColor: '#6f6f6f',\n    notAvailableBgColor: '#f3f3f3',\n    notAvailableBorderColor: '#e2e2e2',\n  },\n};\n\n@customElement('stellar-wallets-modal')\nexport class StellarWalletsModal extends LitElement {\n  static override styles = [\n    css`\n      :host * {\n        box-sizing: border-box;\n      }\n\n      .mb-0 {\n        margin-bottom: 0 !important;\n      }\n    `,\n    modalDialogStyles,\n    modalDialogBodyStyles,\n    modalHelpSection,\n    backdropStyles,\n    modalAnimations,\n    modalWalletsSection,\n  ];\n\n  /**\n   * This value is used to tell the modal that it should not update the value\n   * `showModal` at any moment, this comes handy when the state wants to be handled by another source\n   */\n  @property({ type: Boolean, reflect: true })\n  ignoreShowStatus: boolean = false;\n\n  @property({ type: Boolean, reflect: true })\n  showModal: boolean = false;\n\n  @state()\n  closingModal: boolean = false;\n\n  @property({ type: String, reflect: true })\n  modalTitle: string = 'Connect a Wallet';\n\n  @property({ type: String, reflect: true })\n  notAvailableText: string = 'Not available';\n\n  allowedWallets: ReactiveState<ISupportedWallet[]> = new ReactiveState(this, allowedWallets$);\n\n  theme: ReactiveState<IModalTheme | undefined> = new ReactiveState(this, modalTheme$);\n\n  override connectedCallback() {\n    super.connectedCallback();\n  }\n\n  async closeModal(): Promise<void> {\n    this.closingModal = true;\n\n    await new Promise(r => setTimeout(r, 280));\n\n    if (!this.ignoreShowStatus) {\n      this.showModal = false;\n    }\n\n    this.dispatchEvent(\n      new CustomEvent('modal-closed', {\n        detail: new Error('Modal closed'),\n        bubbles: true,\n        composed: true,\n      })\n    );\n\n    this.closingModal = false;\n  }\n\n  async pickWalletOption(option: ISupportedWallet): Promise<void> {\n    if (!option.isAvailable) {\n      window.open(option.url, '_blank');\n      return;\n    }\n\n    this.closingModal = true;\n\n    await new Promise(r => setTimeout(r, 280));\n\n    try {\n      const record: string | null = window.localStorage.getItem('@StellarWalletsKit/usedWalletsIds');\n      let usedWalletsIds: Array<ISupportedWallet['id']> = record ? JSON.parse(record) : [];\n      usedWalletsIds = [option.id, ...usedWalletsIds.filter((id: string): boolean => id !== option.id)];\n      window.localStorage.setItem('@StellarWalletsKit/usedWalletsIds', JSON.stringify(usedWalletsIds));\n    } catch (e) {\n      console.error(e);\n    }\n\n    this.dispatchEvent(\n      new CustomEvent('wallet-selected', {\n        detail: option,\n        bubbles: true,\n        composed: true,\n      })\n    );\n\n    this.closingModal = false;\n  }\n\n  /**\n   * This function gets the list of the wallets following the logic from this task https://github.com/Creit-Tech/Stellar-Wallets-Kit/issues/28\n   * It follows this order:\n   * 1- Wallet last used by wallet selector\n   * 2- If not wallet last use, wallets detected in the browser\n   * 3- Wallet ordering as defined by the developer\n   *\n   */\n  private getSortedList(): ISupportedWallet[] {\n    const sortedWallets: { available: ISupportedWallet[]; unavailable: ISupportedWallet[] } =\n      this.allowedWallets.value!.reduce(\n        (all: { available: ISupportedWallet[]; unavailable: ISupportedWallet[] }, current: ISupportedWallet) => {\n          return {\n            available: current.isAvailable ? [...all.available, current] : all.available,\n            unavailable: !current.isAvailable ? [...all.unavailable, current] : all.unavailable,\n          };\n        },\n        { available: [], unavailable: [] }\n      );\n\n    let usedWalletsIds: Array<ISupportedWallet['id']>;\n    try {\n      const record: string | null = window.localStorage.getItem('@StellarWalletsKit/usedWalletsIds');\n      usedWalletsIds = record ? JSON.parse(record) : [];\n    } catch (e) {\n      console.error(e);\n      usedWalletsIds = [];\n    }\n\n    if (usedWalletsIds.length === 0) {\n      return [...sortedWallets.available, ...sortedWallets.unavailable];\n    }\n\n    const usedWallets: ISupportedWallet[] = [];\n    const nonUsedWallets: ISupportedWallet[] = [];\n    for (const availableWallet of sortedWallets.available) {\n      if (usedWalletsIds.find((id: string): boolean => id === availableWallet.id)) {\n        usedWallets.push(availableWallet);\n      } else {\n        nonUsedWallets.push(availableWallet);\n      }\n    }\n\n    return [\n      ...usedWallets.sort((a: ISupportedWallet, b: ISupportedWallet) => {\n        return usedWalletsIds.indexOf(a.id) - usedWalletsIds.indexOf(b.id);\n      }),\n      ...nonUsedWallets,\n      ...sortedWallets.unavailable,\n    ];\n  }\n\n  private getThemeStyles() {\n    if (!this.theme.value) return {};\n\n    return {\n      '--modal-bg-color': this.theme.value.bgColor,\n      '--modal-text-color': this.theme.value.textColor,\n      '--modal-solid-text-color': this.theme.value.solidTextColor,\n      '--modal-header-button-color': this.theme.value.headerButtonColor,\n      '--modal-divider-color': this.theme.value.dividerColor,\n      '--modal-help-bg-color': this.theme.value.helpBgColor,\n      '--modal-not-available-text-color': this.theme.value.notAvailableTextColor,\n      '--modal-not-available-bg-color': this.theme.value.notAvailableBgColor,\n      '--modal-not-available-border-color': this.theme.value.notAvailableBorderColor,\n    };\n  }\n\n  override render() {\n    const helpSection = html`\n      <section class=\"help-container\">\n        <header class=\"help-header\">\n          <h2 class=\"help-header__modal-title dialog-text-solid\">Learn more</h2>\n        </header>\n\n        <div class=\"help__whats_a_wallet\">\n          <h2 class=\"dialog-text-solid help__title\">What is a wallet?</h2>\n          <p class=\"dialog-text help__text\">\n            Wallets are used to send, receive, and store the keys you use to sign blockchain transactions.\n          </p>\n        </div>\n\n        <div class=\"help__whats_stellar\">\n          <h2 class=\"dialog-text-solid help__title\">What is Stellar?</h2>\n          <p class=\"dialog-text help__text\">\n            Stellar is a decentralized, public blockchain that gives developers the tools to create experiences that are\n            more like cash than crypto\n          </p>\n        </div>\n      </section>\n    `;\n\n    const walletsSection = html`\n      <section class=\"wallets-container\">\n        <header class=\"wallets-header\">\n          <h2 class=\"wallets-header__modal-title dialog-text-solid\">${this.modalTitle}</h2>\n\n          <button @click=${() => this.closeModal()} class=\"wallets-header__button\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"#000000\" height=\"20px\" width=\"20px\" viewBox=\"0 0 490 490\">\n              <polygon\n                points=\"456.851,0 245,212.564 33.149,0 0.708,32.337 212.669,245.004 0.708,457.678 33.149,490 245,277.443 456.851,490   489.292,457.678 277.331,245.004 489.292,32.337 \" />\n            </svg>\n          </button>\n        </header>\n\n        <ul class=\"wallets-body\">\n          ${this.getSortedList().map(\n            (item: ISupportedWallet, i: number) =>\n              html`\n                <li\n                  @click=${() => this.pickWalletOption(item)}\n                  class=\" wallets-body__item ${!item.isAvailable ? 'not-available' : ''} ${i ===\n                  this.allowedWallets.value!.length - 1\n                    ? 'mb-0'\n                    : ''}\">\n                  <img src=${item.icon} alt=${item.name} />\n                  <span class=\"dialog-text-solid\">${item.name}</span>\n                  ${!item.isAvailable ? html`<small class=\"not-available\">${this.notAvailableText}</small>` : ''}\n                </li>\n              `\n          )}\n        </ul>\n      </section>\n    `;\n\n    return html`\n      <dialog\n        style=${styleMap(this.getThemeStyles())}\n        class=\"dialog-modal ${this.closingModal ? 'closing' : ''}\"\n        .open=${this.showModal}>\n        <section class=\"dialog-modal-body\">\n          <div class=\"dialog-modal-body__help\">${helpSection}</div>\n          <div class=\"dialog-modal-body__wallets\">${walletsSection}</div>\n        </section>\n      </dialog>\n\n      <div\n        style=\"position: fixed; z-index: 950\"\n        class=\"backdrop ${this.closingModal ? 'closing' : ''}\"\n        @click=${() => this.closeModal()}></div>\n    `;\n  }\n}\n"],"names":["StellarWalletsModal","LitElement","constructor","super","arguments","this","ignoreShowStatus","showModal","closingModal","modalTitle","notAvailableText","allowedWallets","ReactiveState","allowedWallets$","theme","modalTheme$","connectedCallback","closeModal","Promise","r","setTimeout","dispatchEvent","CustomEvent","detail","Error","bubbles","composed","pickWalletOption","option","isAvailable","record","window","localStorage","getItem","usedWalletsIds","JSON","parse","id","filter","setItem","stringify","e","console","error","open","url","getSortedList","sortedWallets","value","reduce","all","current","available","unavailable","length","usedWallets","nonUsedWallets","availableWallet","find","push","sort","a","b","indexOf","getThemeStyles","bgColor","textColor","solidTextColor","headerButtonColor","dividerColor","helpBgColor","notAvailableTextColor","notAvailableBgColor","notAvailableBorderColor","render","helpSection","html","walletsSection","map","item","i","icon","name","styleMap","styles","css","modalDialogStyles","modalDialogBodyStyles","modalHelpSection","backdropStyles","modalAnimations","modalWalletsSection","__decorateClass","property","type","Boolean","reflect","prototype","state","String","customElement","DARK","LIGHT"],"mappings":"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"}