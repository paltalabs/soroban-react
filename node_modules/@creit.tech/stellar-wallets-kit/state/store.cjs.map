{"version":3,"file":"store.cjs","sources":["../../src/state/store.ts"],"sourcesContent":["import { createStore, select, setProp, withProps } from '@ngneat/elf';\nimport { Observable } from 'rxjs';\nimport { ISupportedWallet, IModalTheme, WalletNetwork, IButtonTheme } from '../types';\n\nexport interface StateProps {\n  allowedWallets: ISupportedWallet[];\n\n  horizonUrl?: string;\n\n  selectedNetwork?: WalletNetwork;\n  selectedModuleId?: string;\n\n  modalTheme?: IModalTheme;\n  buttonTheme?: IButtonTheme;\n\n  activeAddress?: string;\n  mnemonicPath?: string;\n  hardwareWalletPaths: { publicKey: string; index: number }[];\n}\n\nexport const store = createStore(\n  { name: 'state' },\n  withProps<StateProps>({\n    allowedWallets: [],\n    hardwareWalletPaths: [],\n  })\n);\n\nexport const allowedWallets$: Observable<ISupportedWallet[]> = store.pipe(\n  select((state: StateProps) => state.allowedWallets)\n);\n\nexport const selectedNetwork$: Observable<StateProps['selectedNetwork']> = store.pipe(\n  select((state: StateProps) => state.selectedNetwork)\n);\n\nexport const modalTheme$: Observable<IModalTheme | undefined> = store.pipe(\n  select((state: StateProps) => state.modalTheme)\n);\n\nexport const buttonTheme$: Observable<IButtonTheme | undefined> = store.pipe(\n  select((state: StateProps) => state.buttonTheme)\n);\n\nexport const activeAddress$: Observable<string | undefined> = store.pipe(\n  select((state: StateProps) => state.activeAddress)\n);\n\nexport const horizonUrl$: Observable<string | undefined> = store.pipe(select((state: StateProps) => state.horizonUrl));\n\nexport const mnemonicPath$: Observable<string | undefined> = store.pipe(\n  select((state: StateProps) => state.mnemonicPath)\n);\n\nexport const hardwareWalletPaths$: Observable<{ publicKey: string; index: number }[]> = store.pipe(\n  select((state: StateProps) => state.hardwareWalletPaths)\n);\n\nexport function setSelectedModuleId(moduleId: Required<StateProps['selectedModuleId']>): void {\n  store.update(setProp('selectedModuleId', moduleId));\n}\n\nexport function setNetwork(network: WalletNetwork): void {\n  if (!Object.values(WalletNetwork).includes(network)) {\n    throw new Error(`Wallet network \"${network}\" is not supported`);\n  }\n\n  store.update(setProp('selectedNetwork', network));\n}\n\nexport function setModalTheme(theme: IModalTheme): void {\n  store.update(setProp('modalTheme', theme));\n}\n\nexport function seButtonTheme(theme: IButtonTheme): void {\n  store.update(setProp('buttonTheme', theme));\n}\n\nexport function setAllowedWallets(data: ISupportedWallet[]) {\n  store.update(setProp('allowedWallets', data));\n}\n\nexport function setAddress(address: string): void {\n  store.update(setProp('activeAddress', address));\n}\n\nexport function removeAddress(): void {\n  store.update(setProp('activeAddress', undefined));\n}\n\nexport function setHorizonUrl(url: string): void {\n  store.update(setProp('horizonUrl', url));\n}\n\nexport function setMnemonicPath(path: string): void {\n  store.update(setProp('mnemonicPath', path));\n}\n\nexport function removeMnemonicPath(): void {\n  store.update(setProp('mnemonicPath', undefined));\n}\n\nexport function setHardwareWalletPaths(accounts: { publicKey: string; index: number }[]): void {\n  store.update(setProp('hardwareWalletPaths', accounts));\n}\n\nexport function removeHardwareWalletPaths(): void {\n  store.update(setProp('hardwareWalletPaths', []));\n}\n"],"names":["store","createStore","name","withProps","allowedWallets","hardwareWalletPaths","allowedWallets$","pipe","select","state","selectedNetwork$","selectedNetwork","modalTheme$","modalTheme","buttonTheme$","buttonTheme","activeAddress$","activeAddress","horizonUrl$","horizonUrl","mnemonicPath$","mnemonicPath","hardwareWalletPaths$","update","setProp","theme","address","data","accounts","url","path","network","Object","values","WalletNetwork","includes","Error","moduleId"],"mappings":"oEAoBO,MAAMA,EAAQC,EAAAA,YACnB,CAAEC,KAAM,SACRC,YAAsB,CACpBC,eAAgB,GAChBC,oBAAqB,MAIZC,EAAkDN,EAAMO,KACnEC,UAAQC,GAAsBA,EAAML,kBAGzBM,EAA8DV,EAAMO,KAC/EC,UAAQC,GAAsBA,EAAME,mBAGzBC,EAAmDZ,EAAMO,KACpEC,UAAQC,GAAsBA,EAAMI,cAGzBC,EAAqDd,EAAMO,KACtEC,UAAQC,GAAsBA,EAAMM,eAGzBC,EAAiDhB,EAAMO,KAClEC,UAAQC,GAAsBA,EAAMQ,iBAGzBC,EAA8ClB,EAAMO,KAAKC,EAAAA,QAAQC,GAAsBA,EAAMU,cAE7FC,EAAgDpB,EAAMO,KACjEC,UAAQC,GAAsBA,EAAMY,gBAGzBC,EAA2EtB,EAAMO,KAC5FC,UAAQC,GAAsBA,EAAMJ,0NA+B/B,WACLL,EAAMuB,OAAOC,EAAAA,QAAQ,qBAAiB,GACxC,oCAkBO,WACLxB,EAAMuB,OAAOC,EAAAA,QAAQ,sBAAuB,IAC9C,6BAVO,WACLxB,EAAMuB,OAAOC,EAAAA,QAAQ,oBAAgB,GACvC,wBA1BO,SAAuBC,GAC5BzB,EAAMuB,OAAOC,EAAAA,QAAQ,cAAeC,GACtC,gDAMO,SAAoBC,GACzB1B,EAAMuB,OAAOC,EAAAA,QAAQ,gBAAiBE,GACxC,4BANO,SAA2BC,GAChC3B,EAAMuB,OAAOC,EAAAA,QAAQ,iBAAkBG,GACzC,iCAsBO,SAAgCC,GACrC5B,EAAMuB,OAAOC,EAAAA,QAAQ,sBAAuBI,GAC9C,wBAdO,SAAuBC,GAC5B7B,EAAMuB,OAAOC,EAAAA,QAAQ,aAAcK,GACrC,0BAEO,SAAyBC,GAC9B9B,EAAMuB,OAAOC,EAAAA,QAAQ,eAAgBM,GACvC,wBA1BO,SAAuBL,GAC5BzB,EAAMuB,OAAOC,EAAAA,QAAQ,aAAcC,GACrC,qBAVO,SAAoBM,GACzB,IAAKC,OAAOC,OAAOC,EAAaA,eAAEC,SAASJ,GACzC,MAAM,IAAIK,MAAM,mBAAmBL,uBAGrC/B,EAAMuB,OAAOC,EAAAA,QAAQ,kBAAmBO,GAC1C,8BAVO,SAA6BM,GAClCrC,EAAMuB,OAAOC,EAAAA,QAAQ,mBAAoBa,GAC3C"}