import{store as e,setNetwork as t,setModalTheme as n,seButtonTheme as s,setAllowedWallets as o,setSelectedModuleId as l,setAddress as d,removeAddress as i,setHorizonUrl as r}from"./state/store.js";class a{get selectedModule(){const t=this.modules.find((t=>t.productId===e.getValue().selectedModuleId));if(!t)throw{code:-3,message:"Please set the wallet first"};return t}constructor(e){this.modules=e.modules,this.setWallet(e.selectedWalletId),t(e.network);const l=e.theme||e.modalTheme;l&&n(l),e.buttonTheme&&s(e.buttonTheme),this.getSupportedWallets().then((e=>{o(e)}))}async getSupportedWallets(){return Promise.all(this.modules.map((async e=>{const t=new Promise((e=>setTimeout((()=>e(!1)),500)));return{id:e.productId,name:e.productName,type:e.moduleType,icon:e.productIcon,isAvailable:await Promise.race([t,e.isAvailable()]),url:e.productUrl}})))}setWallet(e){const t=this.modules.find((t=>t.productId===e));if(!t)throw new Error(`Wallet id "${e}" is not supported`);l(t.productId)}async getAddress(e){const{address:t}=await this.selectedModule.getAddress(e);return d(t),{address:t}}async signTransaction(t,n){return this.selectedModule.signTransaction(t,{...n,networkPassphrase:n?.networkPassphrase||e.getValue().selectedNetwork})}async signAuthEntry(t,n){return this.selectedModule.signAuthEntry(t,{...n,networkPassphrase:n?.networkPassphrase||e.getValue().selectedNetwork})}async signMessage(t,n){return this.selectedModule.signMessage(t,{...n,networkPassphrase:n?.networkPassphrase||e.getValue().selectedNetwork})}async getNetwork(){return this.selectedModule.getNetwork()}async disconnect(){i()}isButtonCreated(){return!!this.buttonElement}assignButtons(e){const t="string"==typeof e.connectEl?document.querySelector(e.connectEl):e.connectEl;if(!t)throw new Error("connectEl is not available");if(t.addEventListener("click",(()=>{this.openModal({onWalletSelected:t=>{l(t.id),this.getAddress().then((t=>e.onConnect(t)))}}).then()}),!1),!e.disconnectEl)return;const n="string"==typeof e.disconnectEl?document.querySelector(e.disconnectEl):e.disconnectEl;if(!n)throw new Error("disconnectEl is not available");n.addEventListener("click",(()=>{e.onDisconnect(),i(),this.selectedModule.disconnect&&this.selectedModule.disconnect().then()}),!1)}async createButton(e){if(this.buttonElement)throw new Error("Stellar Wallets Kit button is already created");this.buttonElement=document.createElement("stellar-wallets-button"),e.buttonText&&this.buttonElement.setAttribute("buttonText",e.buttonText),e.horizonUrl&&r(e.horizonUrl),e.container.appendChild(this.buttonElement),this.buttonElement.addEventListener("button-clicked",(()=>{this.openModal({onWalletSelected:t=>{l(t.id),this.getAddress().then((t=>e.onConnect(t)))}})}),!1),this.buttonElement.addEventListener("disconnect-wallet",(()=>{e.onDisconnect(),this.selectedModule.disconnect&&this.selectedModule.disconnect()}),!1)}async removeButton(e){if(!this.buttonElement)throw new Error("Stellar Wallets Kit button hasn't been created yet");!0!==e?.skipDisconnect&&this.buttonElement.disconnect(),this.buttonElement.remove(),delete this.buttonElement}async openModal(e){if(this.modalElement&&!this.buttonElement)throw new Error("Stellar Wallets Kit modal is already open");this.modalElement=document.createElement("stellar-wallets-modal"),this.modalElement.setAttribute("showModal",""),e.modalTitle&&this.modalElement.setAttribute("modalTitle",e.modalTitle),e.notAvailableText&&this.modalElement.setAttribute("notAvailableText",e.notAvailableText),document.body.appendChild(this.modalElement);const t=n=>{e.onWalletSelected(n.detail),this.modalElement.removeEventListener("wallet-selected",t,!1),document.body.removeChild(this.modalElement),this.modalElement=void 0};this.modalElement.addEventListener("wallet-selected",t,!1);const n=s=>{e.onClosed&&e.onClosed(s.detail),this.modalElement.removeEventListener("wallet-selected",t,!1),this.modalElement.removeEventListener("modal-closed",n,!1),document.body.removeChild(this.modalElement),this.modalElement=void 0};this.modalElement.addEventListener("modal-closed",n,!1)}}export{a as StellarWalletsKit};
//# sourceMappingURL=stellar-wallets-kit.js.map
