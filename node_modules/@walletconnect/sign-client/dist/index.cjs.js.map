{"version":3,"file":"index.cjs.js","sources":["../src/constants/client.ts","../src/constants/history.ts","../src/constants/proposal.ts","../src/constants/session.ts","../src/constants/engine.ts","../src/constants/pendingRequest.ts","../src/constants/verify.ts","../src/controllers/engine.ts","../src/controllers/proposal.ts","../src/controllers/session.ts","../src/controllers/pendingRequest.ts","../src/client.ts","../src/index.ts"],"sourcesContent":["import { SignClientTypes } from \"@walletconnect/types\";\n\nexport const SIGN_CLIENT_PROTOCOL = \"wc\";\nexport const SIGN_CLIENT_VERSION = 2;\nexport const SIGN_CLIENT_CONTEXT = \"client\";\n\nexport const SIGN_CLIENT_STORAGE_PREFIX = `${SIGN_CLIENT_PROTOCOL}@${SIGN_CLIENT_VERSION}:${SIGN_CLIENT_CONTEXT}:`;\n\nexport const SIGN_CLIENT_DEFAULT = {\n  name: SIGN_CLIENT_CONTEXT,\n  logger: \"error\",\n  controller: false,\n  relayUrl: \"wss://relay.walletconnect.com\",\n};\n\nexport const SIGN_CLIENT_EVENTS: Record<SignClientTypes.Event, SignClientTypes.Event> = {\n  session_proposal: \"session_proposal\",\n  session_update: \"session_update\",\n  session_extend: \"session_extend\",\n  session_ping: \"session_ping\",\n  session_delete: \"session_delete\",\n  session_expire: \"session_expire\",\n  session_request: \"session_request\",\n  session_request_sent: \"session_request_sent\",\n  session_event: \"session_event\",\n  proposal_expire: \"proposal_expire\",\n  session_request_expire: \"session_request_expire\",\n};\n\nexport const SIGN_CLIENT_STORAGE_OPTIONS = {\n  database: \":memory:\",\n};\n\nexport const WALLETCONNECT_DEEPLINK_CHOICE = \"WALLETCONNECT_DEEPLINK_CHOICE\";\n","export const HISTORY_EVENTS = {\n  created: \"history_created\",\n  updated: \"history_updated\",\n  deleted: \"history_deleted\",\n  sync: \"history_sync\",\n};\n\nexport const HISTORY_CONTEXT = \"history\";\n\nexport const HISTORY_STORAGE_VERSION = \"0.3\";\n","import { THIRTY_DAYS } from \"@walletconnect/time\";\n\nexport const PROPOSAL_CONTEXT = \"proposal\";\n\nexport const PROPOSAL_EXPIRY = THIRTY_DAYS;\n\nexport const PROPOSAL_EXPIRY_MESSAGE = \"Proposal expired\";\n","import { SEVEN_DAYS } from \"@walletconnect/time\";\n\nexport const SESSION_CONTEXT = \"session\";\n\nexport const SESSION_EXPIRY = SEVEN_DAYS;\n","import { FIVE_MINUTES, ONE_DAY, SEVEN_DAYS, THIRTY_SECONDS } from \"@walletconnect/time\";\nimport { EngineTypes } from \"@walletconnect/types\";\n\nexport const ENGINE_CONTEXT = \"engine\";\n\nexport const ENGINE_RPC_OPTS: EngineTypes.RpcOptsMap = {\n  wc_sessionPropose: {\n    req: {\n      ttl: FIVE_MINUTES,\n      prompt: true,\n      tag: 1100,\n    },\n    res: {\n      ttl: FIVE_MINUTES,\n      prompt: false,\n      tag: 1101,\n    },\n  },\n  wc_sessionSettle: {\n    req: {\n      ttl: FIVE_MINUTES,\n      prompt: false,\n      tag: 1102,\n    },\n    res: {\n      ttl: FIVE_MINUTES,\n      prompt: false,\n      tag: 1103,\n    },\n  },\n  wc_sessionUpdate: {\n    req: {\n      ttl: ONE_DAY,\n      prompt: false,\n      tag: 1104,\n    },\n    res: {\n      ttl: ONE_DAY,\n      prompt: false,\n      tag: 1105,\n    },\n  },\n  wc_sessionExtend: {\n    req: {\n      ttl: ONE_DAY,\n      prompt: false,\n      tag: 1106,\n    },\n    res: {\n      ttl: ONE_DAY,\n      prompt: false,\n      tag: 1107,\n    },\n  },\n  wc_sessionRequest: {\n    req: {\n      ttl: FIVE_MINUTES,\n      prompt: true,\n      tag: 1108,\n    },\n    res: {\n      ttl: FIVE_MINUTES,\n      prompt: false,\n      tag: 1109,\n    },\n  },\n  wc_sessionEvent: {\n    req: {\n      ttl: FIVE_MINUTES,\n      prompt: true,\n      tag: 1110,\n    },\n    res: {\n      ttl: FIVE_MINUTES,\n      prompt: false,\n      tag: 1111,\n    },\n  },\n\n  wc_sessionDelete: {\n    req: {\n      ttl: ONE_DAY,\n      prompt: false,\n      tag: 1112,\n    },\n    res: {\n      ttl: ONE_DAY,\n      prompt: false,\n      tag: 1113,\n    },\n  },\n  wc_sessionPing: {\n    req: {\n      ttl: THIRTY_SECONDS,\n      prompt: false,\n      tag: 1114,\n    },\n    res: {\n      ttl: THIRTY_SECONDS,\n      prompt: false,\n      tag: 1115,\n    },\n  },\n};\n\nexport const SESSION_REQUEST_EXPIRY_BOUNDARIES = {\n  min: FIVE_MINUTES,\n  max: SEVEN_DAYS,\n};\n\nexport const ENGINE_QUEUE_STATES: { idle: \"IDLE\"; active: \"ACTIVE\" } = {\n  idle: \"IDLE\",\n  active: \"ACTIVE\",\n};\n","export const REQUEST_CONTEXT = \"request\";\n","export const METHODS_TO_VERIFY = [\"wc_sessionPropose\", \"wc_sessionRequest\", \"wc_authRequest\"];\n","import {\n  EXPIRER_EVENTS,\n  PAIRING_EVENTS,\n  RELAYER_DEFAULT_PROTOCOL,\n  RELAYER_EVENTS,\n  VERIFY_SERVER,\n} from \"@walletconnect/core\";\n\nimport {\n  formatJsonRpcError,\n  formatJsonRpcRequest,\n  formatJsonRpcResult,\n  payloadId,\n  isJsonRpcError,\n  isJsonRpcRequest,\n  isJsonRpcResponse,\n  isJsonRpcResult,\n  JsonRpcRequest,\n  ErrorResponse,\n} from \"@walletconnect/jsonrpc-utils\";\nimport { FIVE_MINUTES, ONE_SECOND, toMiliseconds } from \"@walletconnect/time\";\nimport {\n  EnginePrivate,\n  EngineTypes,\n  ExpirerTypes,\n  IEngine,\n  IEngineEvents,\n  JsonRpcTypes,\n  PendingRequestTypes,\n  Verify,\n  CoreTypes,\n  ProposalTypes,\n  RelayerTypes,\n  SessionTypes,\n  PairingTypes,\n} from \"@walletconnect/types\";\nimport {\n  calcExpiry,\n  createDelayedPromise,\n  engineEvent,\n  getInternalError,\n  getSdkError,\n  isConformingNamespaces,\n  isExpired,\n  isSessionCompatible,\n  isUndefined,\n  isValidController,\n  isValidErrorReason,\n  isValidEvent,\n  isValidId,\n  isValidNamespaces,\n  isValidNamespacesChainId,\n  isValidNamespacesEvent,\n  isValidNamespacesRequest,\n  isValidObject,\n  isValidParams,\n  isValidRelay,\n  isValidRelays,\n  isValidRequest,\n  isValidRequestExpiry,\n  hashMessage,\n  isBrowser,\n  isValidRequiredNamespaces,\n  isValidResponse,\n  isValidString,\n  parseExpirerTarget,\n  TYPE_1,\n  handleDeeplinkRedirect,\n  MemoryStore,\n  getDeepLink,\n} from \"@walletconnect/utils\";\nimport EventEmmiter from \"events\";\nimport {\n  ENGINE_CONTEXT,\n  ENGINE_RPC_OPTS,\n  PROPOSAL_EXPIRY_MESSAGE,\n  SESSION_EXPIRY,\n  SESSION_REQUEST_EXPIRY_BOUNDARIES,\n  METHODS_TO_VERIFY,\n  WALLETCONNECT_DEEPLINK_CHOICE,\n  ENGINE_QUEUE_STATES,\n} from \"../constants\";\n\nexport class Engine extends IEngine {\n  public name = ENGINE_CONTEXT;\n\n  private events: IEngineEvents = new EventEmmiter();\n  private initialized = false;\n  private ignoredPayloadTypes = [TYPE_1];\n\n  /**\n   * Queue responsible for processing incoming requests such as session_update, session_event, session_ping etc\n   * It's needed when the client receives multiple requests at once from the mailbox immediately after initialization and to avoid attempting to process them all at the same time\n   */\n  private requestQueue: EngineTypes.EngineQueue<EngineTypes.EventCallback<JsonRpcRequest>> = {\n    state: ENGINE_QUEUE_STATES.idle,\n    queue: [],\n  };\n\n  /**\n   * Queue responsible for processing incoming session_request\n   * The queue emits the next request only after the previous one has been responded to\n   */\n  private sessionRequestQueue: EngineTypes.EngineQueue<PendingRequestTypes.Struct> = {\n    state: ENGINE_QUEUE_STATES.idle,\n    queue: [],\n  };\n\n  private requestQueueDelay = ONE_SECOND;\n\n  constructor(client: IEngine[\"client\"]) {\n    super(client);\n  }\n\n  public init: IEngine[\"init\"] = async () => {\n    if (!this.initialized) {\n      await this.cleanup();\n      this.registerRelayerEvents();\n      this.registerExpirerEvents();\n      this.registerPairingEvents();\n      this.client.core.pairing.register({ methods: Object.keys(ENGINE_RPC_OPTS) });\n      this.initialized = true;\n      setTimeout(() => {\n        this.sessionRequestQueue.queue = this.getPendingSessionRequests();\n        this.processSessionRequestQueue();\n      }, toMiliseconds(this.requestQueueDelay));\n    }\n  };\n\n  // ---------- Public ------------------------------------------------ //\n\n  public connect: IEngine[\"connect\"] = async (params) => {\n    await this.isInitialized();\n\n    const connectParams = {\n      ...params,\n      requiredNamespaces: params.requiredNamespaces || {},\n      optionalNamespaces: params.optionalNamespaces || {},\n    };\n    await this.isValidConnect(connectParams);\n    const { pairingTopic, requiredNamespaces, optionalNamespaces, sessionProperties, relays } =\n      connectParams;\n    let topic = pairingTopic;\n    let uri: string | undefined;\n    let active = false;\n\n    if (topic) {\n      const pairing = this.client.core.pairing.pairings.get(topic);\n      active = pairing.active;\n    }\n\n    if (!topic || !active) {\n      const { topic: newTopic, uri: newUri } = await this.client.core.pairing.create();\n      topic = newTopic;\n      uri = newUri;\n    }\n\n    const publicKey = await this.client.core.crypto.generateKeyPair();\n\n    const expiry = ENGINE_RPC_OPTS.wc_sessionPropose.req.ttl || FIVE_MINUTES;\n    const expiryTimestamp = calcExpiry(expiry);\n    const proposal = {\n      requiredNamespaces,\n      optionalNamespaces,\n      relays: relays ?? [{ protocol: RELAYER_DEFAULT_PROTOCOL }],\n      proposer: {\n        publicKey,\n        metadata: this.client.metadata,\n      },\n      expiryTimestamp,\n      ...(sessionProperties && { sessionProperties }),\n    };\n    const {\n      reject,\n      resolve,\n      done: approval,\n    } = createDelayedPromise<SessionTypes.Struct>(expiry, PROPOSAL_EXPIRY_MESSAGE);\n    this.events.once<\"session_connect\">(\n      engineEvent(\"session_connect\"),\n      async ({ error, session }) => {\n        if (error) reject(error);\n        else if (session) {\n          session.self.publicKey = publicKey;\n          const completeSession = {\n            ...session,\n            requiredNamespaces: proposal.requiredNamespaces,\n            optionalNamespaces: proposal.optionalNamespaces,\n          };\n          await this.client.session.set(session.topic, completeSession);\n          await this.setExpiry(session.topic, session.expiry);\n          if (topic) {\n            await this.client.core.pairing.updateMetadata({\n              topic,\n              metadata: session.peer.metadata,\n            });\n          }\n          resolve(completeSession);\n        }\n      },\n    );\n\n    if (!topic) {\n      const { message } = getInternalError(\"NO_MATCHING_KEY\", `connect() pairing topic: ${topic}`);\n      throw new Error(message);\n    }\n\n    const id = await this.sendRequest({\n      topic,\n      method: \"wc_sessionPropose\",\n      params: proposal,\n      throwOnFailedPublish: true,\n    });\n\n    await this.setProposal(id, { id, ...proposal });\n    return { uri, approval };\n  };\n\n  public pair: IEngine[\"pair\"] = async (params) => {\n    await this.isInitialized();\n    return await this.client.core.pairing.pair(params);\n  };\n\n  public approve: IEngine[\"approve\"] = async (params) => {\n    await this.isInitialized();\n    await this.isValidApprove(params);\n\n    const { id, relayProtocol, namespaces, sessionProperties } = params;\n    const proposal = this.client.proposal.get(id);\n    let { pairingTopic, proposer, requiredNamespaces, optionalNamespaces } = proposal;\n    pairingTopic = pairingTopic || \"\";\n\n    const selfPublicKey = await this.client.core.crypto.generateKeyPair();\n    const peerPublicKey = proposer.publicKey;\n    const sessionTopic = await this.client.core.crypto.generateSharedKey(\n      selfPublicKey,\n      peerPublicKey,\n    );\n\n    if (pairingTopic && id) {\n      await this.client.core.pairing.updateMetadata({\n        topic: pairingTopic,\n        metadata: proposer.metadata,\n      });\n      await this.sendResult<\"wc_sessionPropose\">({\n        id,\n        topic: pairingTopic,\n        result: {\n          relay: {\n            protocol: relayProtocol ?? \"irn\",\n          },\n          responderPublicKey: selfPublicKey,\n        },\n      });\n      await this.client.proposal.delete(id, getSdkError(\"USER_DISCONNECTED\"));\n      await this.client.core.pairing.activate({ topic: pairingTopic });\n    }\n\n    const sessionSettle = {\n      relay: { protocol: relayProtocol ?? \"irn\" },\n      namespaces,\n      pairingTopic,\n      controller: { publicKey: selfPublicKey, metadata: this.client.metadata },\n      expiry: calcExpiry(SESSION_EXPIRY),\n      ...(sessionProperties && { sessionProperties }),\n    };\n    await this.client.core.relayer.subscribe(sessionTopic);\n    const session = {\n      ...sessionSettle,\n      topic: sessionTopic,\n      requiredNamespaces,\n      optionalNamespaces,\n      pairingTopic,\n      acknowledged: false,\n      self: sessionSettle.controller,\n      peer: {\n        publicKey: proposer.publicKey,\n        metadata: proposer.metadata,\n      },\n      controller: selfPublicKey,\n    };\n    await this.client.session.set(sessionTopic, session);\n    try {\n      await this.sendRequest({\n        topic: sessionTopic,\n        method: \"wc_sessionSettle\",\n        params: sessionSettle,\n        throwOnFailedPublish: true,\n      });\n    } catch (error) {\n      this.client.logger.error(error);\n      // if the publish fails, delete the session and throw an error\n      this.client.session.delete(sessionTopic, getSdkError(\"USER_DISCONNECTED\"));\n      await this.client.core.relayer.unsubscribe(sessionTopic);\n      throw error;\n    }\n\n    await this.setExpiry(sessionTopic, calcExpiry(SESSION_EXPIRY));\n    return {\n      topic: sessionTopic,\n      acknowledged: () =>\n        new Promise((resolve) =>\n          setTimeout(() => resolve(this.client.session.get(sessionTopic)), 5_00),\n        ), // artificial delay to allow for the session to be processed by the peer\n    };\n  };\n\n  public reject: IEngine[\"reject\"] = async (params) => {\n    await this.isInitialized();\n    await this.isValidReject(params);\n    const { id, reason } = params;\n    const { pairingTopic } = this.client.proposal.get(id);\n    if (pairingTopic) {\n      await this.sendError(id, pairingTopic, reason);\n      await this.client.proposal.delete(id, getSdkError(\"USER_DISCONNECTED\"));\n    }\n  };\n\n  public update: IEngine[\"update\"] = async (params) => {\n    await this.isInitialized();\n    await this.isValidUpdate(params);\n    const { topic, namespaces } = params;\n    const id = await this.sendRequest({\n      topic,\n      method: \"wc_sessionUpdate\",\n      params: { namespaces },\n    });\n    const { done: acknowledged, resolve, reject } = createDelayedPromise<void>();\n    this.events.once(engineEvent(\"session_update\", id), ({ error }) => {\n      if (error) reject(error);\n      else resolve();\n    });\n    await this.client.session.update(topic, { namespaces });\n\n    return { acknowledged };\n  };\n\n  public extend: IEngine[\"extend\"] = async (params) => {\n    await this.isInitialized();\n    await this.isValidExtend(params);\n    const { topic } = params;\n    const id = await this.sendRequest({ topic, method: \"wc_sessionExtend\", params: {} });\n    const { done: acknowledged, resolve, reject } = createDelayedPromise<void>();\n    this.events.once(engineEvent(\"session_extend\", id), ({ error }) => {\n      if (error) reject(error);\n      else resolve();\n    });\n    await this.setExpiry(topic, calcExpiry(SESSION_EXPIRY));\n\n    return { acknowledged };\n  };\n\n  public request: IEngine[\"request\"] = async <T>(params: EngineTypes.RequestParams) => {\n    await this.isInitialized();\n    await this.isValidRequest(params);\n    const { chainId, request, topic, expiry = ENGINE_RPC_OPTS.wc_sessionRequest.req.ttl } = params;\n    const id = payloadId();\n    const { done, resolve, reject } = createDelayedPromise<T>(\n      expiry,\n      \"Request expired. Please try again.\",\n    );\n    this.events.once<\"session_request\">(engineEvent(\"session_request\", id), ({ error, result }) => {\n      if (error) reject(error);\n      else resolve(result);\n    });\n    return await Promise.all([\n      new Promise<void>(async (resolve) => {\n        await this.sendRequest({\n          clientRpcId: id,\n          topic,\n          method: \"wc_sessionRequest\",\n          params: {\n            request: {\n              ...request,\n              expiryTimestamp: calcExpiry(expiry),\n            },\n            chainId,\n          },\n          expiry,\n          throwOnFailedPublish: true,\n        }).catch((error) => reject(error));\n        this.client.events.emit(\"session_request_sent\", { topic, request, chainId, id });\n        resolve();\n      }),\n      new Promise<void>(async (resolve) => {\n        const wcDeepLink = await getDeepLink(\n          this.client.core.storage,\n          WALLETCONNECT_DEEPLINK_CHOICE,\n        );\n        handleDeeplinkRedirect({ id, topic, wcDeepLink });\n        resolve();\n      }),\n      done(),\n    ]).then((result) => result[2]); // order is important here, we want to return the result of the `done` promise\n  };\n\n  public respond: IEngine[\"respond\"] = async (params) => {\n    await this.isInitialized();\n    await this.isValidRespond(params);\n    const { topic, response } = params;\n    const { id } = response;\n    if (isJsonRpcResult(response)) {\n      await this.sendResult({ id, topic, result: response.result, throwOnFailedPublish: true });\n    } else if (isJsonRpcError(response)) {\n      await this.sendError(id, topic, response.error);\n    }\n    this.cleanupAfterResponse(params);\n  };\n\n  public ping: IEngine[\"ping\"] = async (params) => {\n    await this.isInitialized();\n    await this.isValidPing(params);\n    const { topic } = params;\n    if (this.client.session.keys.includes(topic)) {\n      const id = await this.sendRequest({ topic, method: \"wc_sessionPing\", params: {} });\n      const { done, resolve, reject } = createDelayedPromise<void>();\n      this.events.once(engineEvent(\"session_ping\", id), ({ error }) => {\n        if (error) reject(error);\n        else resolve();\n      });\n      await done();\n    } else if (this.client.core.pairing.pairings.keys.includes(topic)) {\n      await this.client.core.pairing.ping({ topic });\n    }\n  };\n\n  public emit: IEngine[\"emit\"] = async (params) => {\n    await this.isInitialized();\n    await this.isValidEmit(params);\n    const { topic, event, chainId } = params;\n    await this.sendRequest({ topic, method: \"wc_sessionEvent\", params: { event, chainId } });\n  };\n\n  public disconnect: IEngine[\"disconnect\"] = async (params) => {\n    await this.isInitialized();\n    await this.isValidDisconnect(params);\n    const { topic } = params;\n    if (this.client.session.keys.includes(topic)) {\n      // await an ack to ensure the relay has received the disconnect request\n      await this.sendRequest({\n        topic,\n        method: \"wc_sessionDelete\",\n        params: getSdkError(\"USER_DISCONNECTED\"),\n        throwOnFailedPublish: true,\n      });\n      await this.deleteSession({ topic, emitEvent: false });\n    } else if (this.client.core.pairing.pairings.keys.includes(topic)) {\n      await this.client.core.pairing.disconnect({ topic });\n    } else {\n      const { message } = getInternalError(\n        \"MISMATCHED_TOPIC\",\n        `Session or pairing topic not found: ${topic}`,\n      );\n      throw new Error(message);\n    }\n  };\n\n  public find: IEngine[\"find\"] = (params) => {\n    this.isInitialized();\n    return this.client.session.getAll().filter((session) => isSessionCompatible(session, params));\n  };\n\n  public getPendingSessionRequests: IEngine[\"getPendingSessionRequests\"] = () => {\n    return this.client.pendingRequest.getAll();\n  };\n\n  // ---------- Private Helpers --------------------------------------- //\n\n  private cleanupDuplicatePairings: EnginePrivate[\"cleanupDuplicatePairings\"] = async (\n    session: SessionTypes.Struct,\n  ) => {\n    // older SDK versions are missing the `pairingTopic` prop thus we need to check for it\n    if (!session.pairingTopic) return;\n\n    try {\n      const pairing = this.client.core.pairing.pairings.get(session.pairingTopic);\n      const allPairings = this.client.core.pairing.pairings.getAll();\n      const duplicates = allPairings.filter(\n        (p) =>\n          p.peerMetadata?.url &&\n          p.peerMetadata?.url === session.peer.metadata.url &&\n          p.topic &&\n          p.topic !== pairing.topic,\n      );\n      if (duplicates.length === 0) return;\n      this.client.logger.info(`Cleaning up ${duplicates.length} duplicate pairing(s)`);\n      await Promise.all(\n        duplicates.map((p) => this.client.core.pairing.disconnect({ topic: p.topic })),\n      );\n      this.client.logger.info(`Duplicate pairings clean up finished`);\n    } catch (error) {\n      this.client.logger.error(error);\n    }\n  };\n\n  private deleteSession: EnginePrivate[\"deleteSession\"] = async (params) => {\n    const { topic, expirerHasDeleted = false, emitEvent = true, id = 0 } = params;\n    const { self } = this.client.session.get(topic);\n    // Await the unsubscribe first to avoid deleting the symKey too early below.\n    await this.client.core.relayer.unsubscribe(topic);\n    await this.client.session.delete(topic, getSdkError(\"USER_DISCONNECTED\"));\n    if (this.client.core.crypto.keychain.has(self.publicKey)) {\n      await this.client.core.crypto.deleteKeyPair(self.publicKey);\n    }\n    if (this.client.core.crypto.keychain.has(topic)) {\n      await this.client.core.crypto.deleteSymKey(topic);\n    }\n    if (!expirerHasDeleted) this.client.core.expirer.del(topic);\n    // remove any deeplinks from storage after the session is deleted\n    // to avoid navigating to incorrect deeplink later on\n    this.client.core.storage\n      .removeItem(WALLETCONNECT_DEEPLINK_CHOICE)\n      .catch((e) => this.client.logger.warn(e));\n    this.getPendingSessionRequests().forEach((r) => {\n      if (r.topic === topic) {\n        this.deletePendingSessionRequest(r.id, getSdkError(\"USER_DISCONNECTED\"));\n      }\n    });\n    if (emitEvent) this.client.events.emit(\"session_delete\", { id, topic });\n  };\n\n  private deleteProposal: EnginePrivate[\"deleteProposal\"] = async (id, expirerHasDeleted) => {\n    await Promise.all([\n      this.client.proposal.delete(id, getSdkError(\"USER_DISCONNECTED\")),\n      expirerHasDeleted ? Promise.resolve() : this.client.core.expirer.del(id),\n    ]);\n  };\n\n  private deletePendingSessionRequest: EnginePrivate[\"deletePendingSessionRequest\"] = async (\n    id,\n    reason,\n    expirerHasDeleted = false,\n  ) => {\n    await Promise.all([\n      this.client.pendingRequest.delete(id, reason),\n      expirerHasDeleted ? Promise.resolve() : this.client.core.expirer.del(id),\n    ]);\n    this.sessionRequestQueue.queue = this.sessionRequestQueue.queue.filter((r) => r.id !== id);\n    // set the requestQueue state to idle if expirer has deleted a request as trying to respond to it would result in an exception\n    if (expirerHasDeleted) {\n      this.sessionRequestQueue.state = ENGINE_QUEUE_STATES.idle;\n      this.client.events.emit(\"session_request_expire\", { id });\n    }\n  };\n\n  private setExpiry: EnginePrivate[\"setExpiry\"] = async (topic, expiry) => {\n    if (this.client.session.keys.includes(topic)) {\n      await this.client.session.update(topic, { expiry });\n    }\n    this.client.core.expirer.set(topic, expiry);\n  };\n\n  private setProposal: EnginePrivate[\"setProposal\"] = async (id, proposal) => {\n    await this.client.proposal.set(id, proposal);\n    this.client.core.expirer.set(id, calcExpiry(ENGINE_RPC_OPTS.wc_sessionPropose.req.ttl));\n  };\n\n  private setPendingSessionRequest: EnginePrivate[\"setPendingSessionRequest\"] = async (\n    pendingRequest: PendingRequestTypes.Struct,\n  ) => {\n    const { id, topic, params, verifyContext } = pendingRequest;\n    const expiry =\n      params.request.expiryTimestamp || calcExpiry(ENGINE_RPC_OPTS.wc_sessionRequest.req.ttl);\n    await this.client.pendingRequest.set(id, {\n      id,\n      topic,\n      params,\n      verifyContext,\n    });\n    if (expiry) this.client.core.expirer.set(id, expiry);\n  };\n\n  private sendRequest: EnginePrivate[\"sendRequest\"] = async (args) => {\n    const { topic, method, params, expiry, relayRpcId, clientRpcId, throwOnFailedPublish } = args;\n    const payload = formatJsonRpcRequest(method, params, clientRpcId);\n    if (isBrowser() && METHODS_TO_VERIFY.includes(method)) {\n      const hash = hashMessage(JSON.stringify(payload));\n      this.client.core.verify.register({ attestationId: hash });\n    }\n    const message = await this.client.core.crypto.encode(topic, payload);\n    const opts = ENGINE_RPC_OPTS[method].req;\n    if (expiry) opts.ttl = expiry;\n    if (relayRpcId) opts.id = relayRpcId;\n    this.client.core.history.set(topic, payload);\n    if (throwOnFailedPublish) {\n      opts.internal = {\n        ...opts.internal,\n        throwOnFailedPublish: true,\n      };\n      await this.client.core.relayer.publish(topic, message, opts);\n    } else {\n      this.client.core.relayer\n        .publish(topic, message, opts)\n        .catch((error) => this.client.logger.error(error));\n    }\n    return payload.id;\n  };\n\n  private sendResult: EnginePrivate[\"sendResult\"] = async (args) => {\n    const { id, topic, result, throwOnFailedPublish } = args;\n    const payload = formatJsonRpcResult(id, result);\n    const message = await this.client.core.crypto.encode(topic, payload);\n    const record = await this.client.core.history.get(topic, id);\n    const opts = ENGINE_RPC_OPTS[record.request.method].res;\n    if (throwOnFailedPublish) {\n      opts.internal = {\n        ...opts.internal,\n        throwOnFailedPublish: true,\n      };\n      await this.client.core.relayer.publish(topic, message, opts);\n    } else {\n      this.client.core.relayer\n        .publish(topic, message, opts)\n        .catch((error) => this.client.logger.error(error));\n    }\n    await this.client.core.history.resolve(payload);\n  };\n\n  private sendError: EnginePrivate[\"sendError\"] = async (id, topic, error) => {\n    const payload = formatJsonRpcError(id, error);\n    const message = await this.client.core.crypto.encode(topic, payload);\n    const record = await this.client.core.history.get(topic, id);\n    const opts = ENGINE_RPC_OPTS[record.request.method].res;\n    // await is intentionally omitted to speed up performance\n    this.client.core.relayer.publish(topic, message, opts);\n    await this.client.core.history.resolve(payload);\n  };\n\n  private cleanup: EnginePrivate[\"cleanup\"] = async () => {\n    const sessionTopics: string[] = [];\n    const proposalIds: number[] = [];\n    this.client.session.getAll().forEach((session) => {\n      let toCleanup = false;\n      if (isExpired(session.expiry)) toCleanup = true;\n      if (!this.client.core.crypto.keychain.has(session.topic)) toCleanup = true;\n      if (toCleanup) sessionTopics.push(session.topic);\n    });\n    this.client.proposal.getAll().forEach((proposal) => {\n      if (isExpired(proposal.expiryTimestamp)) proposalIds.push(proposal.id);\n    });\n    await Promise.all([\n      ...sessionTopics.map((topic) => this.deleteSession({ topic })),\n      ...proposalIds.map((id) => this.deleteProposal(id)),\n    ]);\n  };\n\n  private async isInitialized() {\n    if (!this.initialized) {\n      const { message } = getInternalError(\"NOT_INITIALIZED\", this.name);\n      throw new Error(message);\n    }\n    await this.client.core.relayer.confirmOnlineStateOrThrow();\n  }\n\n  // ---------- Relay Events Router ----------------------------------- //\n\n  private registerRelayerEvents() {\n    this.client.core.relayer.on(\n      RELAYER_EVENTS.message,\n      async (event: RelayerTypes.MessageEvent) => {\n        const { topic, message } = event;\n\n        // messages of certain types should be ignored as they are handled by their respective SDKs\n        if (this.ignoredPayloadTypes.includes(this.client.core.crypto.getPayloadType(message))) {\n          return;\n        }\n\n        const payload = await this.client.core.crypto.decode(topic, message);\n        try {\n          if (isJsonRpcRequest(payload)) {\n            this.client.core.history.set(topic, payload);\n            this.onRelayEventRequest({ topic, payload });\n          } else if (isJsonRpcResponse(payload)) {\n            await this.client.core.history.resolve(payload);\n            await this.onRelayEventResponse({ topic, payload });\n            this.client.core.history.delete(topic, payload.id);\n          } else {\n            this.onRelayEventUnknownPayload({ topic, payload });\n          }\n        } catch (error) {\n          this.client.logger.error(error);\n        }\n      },\n    );\n  }\n\n  private onRelayEventRequest: EnginePrivate[\"onRelayEventRequest\"] = async (event) => {\n    this.requestQueue.queue.push(event);\n    await this.processRequestsQueue();\n  };\n\n  private processRequestsQueue = async () => {\n    if (this.requestQueue.state === ENGINE_QUEUE_STATES.active) {\n      this.client.logger.info(`Request queue already active, skipping...`);\n      return;\n    }\n\n    this.client.logger.info(\n      `Request queue starting with ${this.requestQueue.queue.length} requests`,\n    );\n\n    while (this.requestQueue.queue.length > 0) {\n      this.requestQueue.state = ENGINE_QUEUE_STATES.active;\n      const request = this.requestQueue.queue.shift();\n      if (!request) continue;\n\n      try {\n        this.processRequest(request);\n        // small delay to allow for any async tasks to complete\n        await new Promise((resolve) => setTimeout(resolve, 300));\n      } catch (error) {\n        this.client.logger.warn(error);\n      }\n    }\n    this.requestQueue.state = ENGINE_QUEUE_STATES.idle;\n  };\n\n  private processRequest: EnginePrivate[\"onRelayEventRequest\"] = (event) => {\n    const { topic, payload } = event;\n    const reqMethod = payload.method as JsonRpcTypes.WcMethod;\n    switch (reqMethod) {\n      case \"wc_sessionPropose\":\n        return this.onSessionProposeRequest(topic, payload);\n      case \"wc_sessionSettle\":\n        return this.onSessionSettleRequest(topic, payload);\n      case \"wc_sessionUpdate\":\n        return this.onSessionUpdateRequest(topic, payload);\n      case \"wc_sessionExtend\":\n        return this.onSessionExtendRequest(topic, payload);\n      case \"wc_sessionPing\":\n        return this.onSessionPingRequest(topic, payload);\n      case \"wc_sessionDelete\":\n        return this.onSessionDeleteRequest(topic, payload);\n      case \"wc_sessionRequest\":\n        return this.onSessionRequest(topic, payload);\n      case \"wc_sessionEvent\":\n        return this.onSessionEventRequest(topic, payload);\n      default:\n        return this.client.logger.info(`Unsupported request method ${reqMethod}`);\n    }\n  };\n\n  private onRelayEventResponse: EnginePrivate[\"onRelayEventResponse\"] = async (event) => {\n    const { topic, payload } = event;\n    const record = await this.client.core.history.get(topic, payload.id);\n    const resMethod = record.request.method as JsonRpcTypes.WcMethod;\n    switch (resMethod) {\n      case \"wc_sessionPropose\":\n        return this.onSessionProposeResponse(topic, payload);\n      case \"wc_sessionSettle\":\n        return this.onSessionSettleResponse(topic, payload);\n      case \"wc_sessionUpdate\":\n        return this.onSessionUpdateResponse(topic, payload);\n      case \"wc_sessionExtend\":\n        return this.onSessionExtendResponse(topic, payload);\n      case \"wc_sessionPing\":\n        return this.onSessionPingResponse(topic, payload);\n      case \"wc_sessionRequest\":\n        return this.onSessionRequestResponse(topic, payload);\n      default:\n        return this.client.logger.info(`Unsupported response method ${resMethod}`);\n    }\n  };\n\n  private onRelayEventUnknownPayload: EnginePrivate[\"onRelayEventUnknownPayload\"] = (event) => {\n    const { topic } = event;\n    const { message } = getInternalError(\n      \"MISSING_OR_INVALID\",\n      `Decoded payload on topic ${topic} is not identifiable as a JSON-RPC request or a response.`,\n    );\n    throw new Error(message);\n  };\n\n  // ---------- Relay Events Handlers --------------------------------- //\n\n  private onSessionProposeRequest: EnginePrivate[\"onSessionProposeRequest\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { params, id } = payload;\n    try {\n      this.isValidConnect({ ...payload.params });\n      const expiryTimestamp =\n        params.expiryTimestamp || calcExpiry(ENGINE_RPC_OPTS.wc_sessionPropose.req.ttl);\n      const proposal = { id, pairingTopic: topic, expiryTimestamp, ...params };\n      await this.setProposal(id, proposal);\n      const hash = hashMessage(JSON.stringify(payload));\n      const verifyContext = await this.getVerifyContext(hash, proposal.proposer.metadata);\n      this.client.events.emit(\"session_proposal\", { id, params: proposal, verifyContext });\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.client.logger.error(err);\n    }\n  };\n\n  private onSessionProposeResponse: EnginePrivate[\"onSessionProposeResponse\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { id } = payload;\n    if (isJsonRpcResult(payload)) {\n      const { result } = payload;\n      this.client.logger.trace({ type: \"method\", method: \"onSessionProposeResponse\", result });\n      const proposal = this.client.proposal.get(id);\n      this.client.logger.trace({ type: \"method\", method: \"onSessionProposeResponse\", proposal });\n      const selfPublicKey = proposal.proposer.publicKey;\n      this.client.logger.trace({\n        type: \"method\",\n        method: \"onSessionProposeResponse\",\n        selfPublicKey,\n      });\n      const peerPublicKey = result.responderPublicKey;\n      this.client.logger.trace({\n        type: \"method\",\n        method: \"onSessionProposeResponse\",\n        peerPublicKey,\n      });\n      const sessionTopic = await this.client.core.crypto.generateSharedKey(\n        selfPublicKey,\n        peerPublicKey,\n      );\n      this.client.logger.trace({\n        type: \"method\",\n        method: \"onSessionProposeResponse\",\n        sessionTopic,\n      });\n      const subscriptionId = await this.client.core.relayer.subscribe(sessionTopic);\n      this.client.logger.trace({\n        type: \"method\",\n        method: \"onSessionProposeResponse\",\n        subscriptionId,\n      });\n      await this.client.core.pairing.activate({ topic });\n    } else if (isJsonRpcError(payload)) {\n      await this.client.proposal.delete(id, getSdkError(\"USER_DISCONNECTED\"));\n      this.events.emit(engineEvent(\"session_connect\"), { error: payload.error });\n    }\n  };\n\n  private onSessionSettleRequest: EnginePrivate[\"onSessionSettleRequest\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { id, params } = payload;\n    try {\n      this.isValidSessionSettleRequest(params);\n      const { relay, controller, expiry, namespaces, sessionProperties, pairingTopic } =\n        payload.params;\n      const session = {\n        topic,\n        relay,\n        expiry,\n        namespaces,\n        acknowledged: true,\n        pairingTopic,\n        requiredNamespaces: {},\n        optionalNamespaces: {},\n        controller: controller.publicKey,\n        self: {\n          publicKey: \"\",\n          metadata: this.client.metadata,\n        },\n        peer: {\n          publicKey: controller.publicKey,\n          metadata: controller.metadata,\n        },\n        ...(sessionProperties && { sessionProperties }),\n      };\n      await this.sendResult<\"wc_sessionSettle\">({ id: payload.id, topic, result: true });\n      this.events.emit(engineEvent(\"session_connect\"), { session });\n      this.cleanupDuplicatePairings(session);\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.client.logger.error(err);\n    }\n  };\n\n  private onSessionSettleResponse: EnginePrivate[\"onSessionSettleResponse\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { id } = payload;\n    if (isJsonRpcResult(payload)) {\n      await this.client.session.update(topic, { acknowledged: true });\n      this.events.emit(engineEvent(\"session_approve\", id), {});\n    } else if (isJsonRpcError(payload)) {\n      await this.client.session.delete(topic, getSdkError(\"USER_DISCONNECTED\"));\n      this.events.emit(engineEvent(\"session_approve\", id), { error: payload.error });\n    }\n  };\n\n  private onSessionUpdateRequest: EnginePrivate[\"onSessionUpdateRequest\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { params, id } = payload;\n    try {\n      const memoryKey = `${topic}_session_update`;\n      // compare the current request id with the last processed session update\n      // we want to update only if the request is newer than the last processed one\n      const lastSessionUpdateId = MemoryStore.get<number>(memoryKey);\n      if (lastSessionUpdateId && this.isRequestOutOfSync(lastSessionUpdateId, id)) {\n        this.client.logger.info(`Discarding out of sync request - ${id}`);\n        return;\n      }\n\n      this.isValidUpdate({ topic, ...params });\n      await this.client.session.update(topic, { namespaces: params.namespaces });\n      await this.sendResult<\"wc_sessionUpdate\">({ id, topic, result: true });\n      this.client.events.emit(\"session_update\", { id, topic, params });\n      MemoryStore.set(memoryKey, id);\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.client.logger.error(err);\n    }\n  };\n\n  // compares the timestamp of the last processed request with the current request\n  // client <-> client rpc ID is timestamp + 3 random digits\n  private isRequestOutOfSync = (lastId: number, currentId: number) => {\n    return parseInt(currentId.toString().slice(0, -3)) <= parseInt(lastId.toString().slice(0, -3));\n  };\n\n  private onSessionUpdateResponse: EnginePrivate[\"onSessionUpdateResponse\"] = (_topic, payload) => {\n    const { id } = payload;\n    if (isJsonRpcResult(payload)) {\n      this.events.emit(engineEvent(\"session_update\", id), {});\n    } else if (isJsonRpcError(payload)) {\n      this.events.emit(engineEvent(\"session_update\", id), { error: payload.error });\n    }\n  };\n\n  private onSessionExtendRequest: EnginePrivate[\"onSessionExtendRequest\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { id } = payload;\n    try {\n      this.isValidExtend({ topic });\n      await this.setExpiry(topic, calcExpiry(SESSION_EXPIRY));\n      await this.sendResult<\"wc_sessionExtend\">({ id, topic, result: true });\n      this.client.events.emit(\"session_extend\", { id, topic });\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.client.logger.error(err);\n    }\n  };\n\n  private onSessionExtendResponse: EnginePrivate[\"onSessionExtendResponse\"] = (_topic, payload) => {\n    const { id } = payload;\n    if (isJsonRpcResult(payload)) {\n      this.events.emit(engineEvent(\"session_extend\", id), {});\n    } else if (isJsonRpcError(payload)) {\n      this.events.emit(engineEvent(\"session_extend\", id), { error: payload.error });\n    }\n  };\n\n  private onSessionPingRequest: EnginePrivate[\"onSessionPingRequest\"] = async (topic, payload) => {\n    const { id } = payload;\n    try {\n      this.isValidPing({ topic });\n      await this.sendResult<\"wc_sessionPing\">({ id, topic, result: true });\n      this.client.events.emit(\"session_ping\", { id, topic });\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.client.logger.error(err);\n    }\n  };\n\n  private onSessionPingResponse: EnginePrivate[\"onSessionPingResponse\"] = (_topic, payload) => {\n    const { id } = payload;\n    // put at the end of the stack to avoid a race condition\n    // where session_ping listener is not yet initialized\n    setTimeout(() => {\n      if (isJsonRpcResult(payload)) {\n        this.events.emit(engineEvent(\"session_ping\", id), {});\n      } else if (isJsonRpcError(payload)) {\n        this.events.emit(engineEvent(\"session_ping\", id), { error: payload.error });\n      }\n    }, 500);\n  };\n\n  private onSessionDeleteRequest: EnginePrivate[\"onSessionDeleteRequest\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { id } = payload;\n    try {\n      this.isValidDisconnect({ topic, reason: payload.params });\n      await Promise.all([\n        new Promise((resolve) => {\n          // RPC request needs to happen before deletion as it utalises session encryption\n          this.client.core.relayer.once(RELAYER_EVENTS.publish, async () => {\n            resolve(await this.deleteSession({ topic, id }));\n          });\n        }),\n        this.sendResult<\"wc_sessionDelete\">({ id, topic, result: true }),\n        this.cleanupPendingSentRequestsForTopic({ topic, error: getSdkError(\"USER_DISCONNECTED\") }),\n      ]);\n    } catch (err: any) {\n      this.client.logger.error(err);\n    }\n  };\n\n  private onSessionRequest: EnginePrivate[\"onSessionRequest\"] = async (topic, payload) => {\n    const { id, params } = payload;\n    try {\n      this.isValidRequest({ topic, ...params });\n      const hash = hashMessage(\n        JSON.stringify(formatJsonRpcRequest(\"wc_sessionRequest\", params, id)),\n      );\n      const session = this.client.session.get(topic);\n      const verifyContext = await this.getVerifyContext(hash, session.peer.metadata);\n      const request = {\n        id,\n        topic,\n        params,\n        verifyContext,\n      };\n      await this.setPendingSessionRequest(request);\n      this.addSessionRequestToSessionRequestQueue(request);\n      this.processSessionRequestQueue();\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.client.logger.error(err);\n    }\n  };\n\n  private onSessionRequestResponse: EnginePrivate[\"onSessionRequestResponse\"] = (\n    _topic,\n    payload,\n  ) => {\n    const { id } = payload;\n    if (isJsonRpcResult(payload)) {\n      this.events.emit(engineEvent(\"session_request\", id), { result: payload.result });\n    } else if (isJsonRpcError(payload)) {\n      this.events.emit(engineEvent(\"session_request\", id), { error: payload.error });\n    }\n  };\n\n  private onSessionEventRequest: EnginePrivate[\"onSessionEventRequest\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { id, params } = payload;\n    try {\n      // similar to session update, we want to discard out of sync requests\n      // additionally we have to check the event type as well e.g. chainChanged/accountsChanged\n      const memoryKey = `${topic}_session_event_${params.event.name}`;\n      // compare the current request id with the last processed session update\n      // we want to update only if the request is newer than the last processed one\n      const lastSessionUpdateId = MemoryStore.get<number>(memoryKey);\n      if (lastSessionUpdateId && this.isRequestOutOfSync(lastSessionUpdateId, id)) {\n        this.client.logger.info(`Discarding out of sync request - ${id}`);\n        return;\n      }\n\n      this.isValidEmit({ topic, ...params });\n      this.client.events.emit(\"session_event\", { id, topic, params });\n      MemoryStore.set(memoryKey, id);\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.client.logger.error(err);\n    }\n  };\n\n  private addSessionRequestToSessionRequestQueue = (request: PendingRequestTypes.Struct) => {\n    this.sessionRequestQueue.queue.push(request);\n  };\n\n  private cleanupAfterResponse = (params: EngineTypes.RespondParams) => {\n    this.deletePendingSessionRequest(params.response.id, { message: \"fulfilled\", code: 0 });\n    // intentionally delay the emitting of the next pending request a bit\n    setTimeout(() => {\n      this.sessionRequestQueue.state = ENGINE_QUEUE_STATES.idle;\n      this.processSessionRequestQueue();\n    }, toMiliseconds(this.requestQueueDelay));\n  };\n\n  // Allows for cleanup on any sent pending requests if the peer disconnects the session before responding\n  private cleanupPendingSentRequestsForTopic = ({\n    topic,\n    error,\n  }: {\n    topic: string;\n    error: ErrorResponse;\n  }) => {\n    const pendingRequests = this.client.core.history.pending;\n    if (pendingRequests.length > 0) {\n      const forSession = pendingRequests.filter(\n        (r) => r.topic === topic && r.request.method === \"wc_sessionRequest\",\n      );\n      forSession.forEach((r) => {\n        // notify .request() handler of the rejection\n        this.events.emit(engineEvent(\"session_request\", r.request.id), {\n          error,\n        });\n      });\n    }\n  };\n\n  private processSessionRequestQueue = () => {\n    if (this.sessionRequestQueue.state === ENGINE_QUEUE_STATES.active) {\n      this.client.logger.info(\"session request queue is already active.\");\n      return;\n    }\n    // Select the first/oldest request in the array to ensure last-in-first-out (LIFO)\n    const request = this.sessionRequestQueue.queue[0];\n    if (!request) {\n      this.client.logger.info(\"session request queue is empty.\");\n      return;\n    }\n\n    try {\n      this.sessionRequestQueue.state = ENGINE_QUEUE_STATES.active;\n      this.client.events.emit(\"session_request\", request);\n    } catch (error) {\n      this.client.logger.error(error);\n    }\n  };\n\n  // ---------- Expirer Events ---------------------------------------- //\n\n  private registerExpirerEvents() {\n    this.client.core.expirer.on(EXPIRER_EVENTS.expired, async (event: ExpirerTypes.Expiration) => {\n      const { topic, id } = parseExpirerTarget(event.target);\n      if (id && this.client.pendingRequest.keys.includes(id)) {\n        return await this.deletePendingSessionRequest(id, getInternalError(\"EXPIRED\"), true);\n      }\n\n      if (topic) {\n        if (this.client.session.keys.includes(topic)) {\n          await this.deleteSession({ topic, expirerHasDeleted: true });\n          this.client.events.emit(\"session_expire\", { topic });\n        }\n      } else if (id) {\n        await this.deleteProposal(id, true);\n        this.client.events.emit(\"proposal_expire\", { id });\n      }\n    });\n  }\n\n  // ---------- Pairing Events ---------------------------------------- //\n  private registerPairingEvents() {\n    this.client.core.pairing.events.on(PAIRING_EVENTS.create, (pairing: PairingTypes.Struct) =>\n      this.onPairingCreated(pairing),\n    );\n  }\n\n  /**\n   * when a pairing is created, we check if there is a pending proposal for it.\n   * if there is, we send it to onSessionProposeRequest to be processed as if it was received from the relay.\n   * It allows QR/URI to be scanned multiple times without having to create new pairing.\n   */\n  private onPairingCreated = (pairing: PairingTypes.Struct) => {\n    if (pairing.active) return;\n    const proposals = this.client.proposal.getAll();\n    const proposal = proposals.find((p) => p.pairingTopic === pairing.topic);\n    if (!proposal) return;\n    this.onSessionProposeRequest(\n      pairing.topic,\n      formatJsonRpcRequest(\n        \"wc_sessionPropose\",\n        {\n          requiredNamespaces: proposal.requiredNamespaces,\n          optionalNamespaces: proposal.optionalNamespaces,\n          relays: proposal.relays,\n          proposer: proposal.proposer,\n          sessionProperties: proposal.sessionProperties,\n        },\n        proposal.id,\n      ),\n    );\n  };\n\n  // ---------- Validation Helpers ------------------------------------ //\n  private isValidPairingTopic(topic: any) {\n    if (!isValidString(topic, false)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `pairing topic should be a string: ${topic}`,\n      );\n      throw new Error(message);\n    }\n    if (!this.client.core.pairing.pairings.keys.includes(topic)) {\n      const { message } = getInternalError(\n        \"NO_MATCHING_KEY\",\n        `pairing topic doesn't exist: ${topic}`,\n      );\n      throw new Error(message);\n    }\n    if (isExpired(this.client.core.pairing.pairings.get(topic).expiry)) {\n      // await this.deletePairing(topic);\n      const { message } = getInternalError(\"EXPIRED\", `pairing topic: ${topic}`);\n      throw new Error(message);\n    }\n  }\n\n  private async isValidSessionTopic(topic: any) {\n    if (!isValidString(topic, false)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `session topic should be a string: ${topic}`,\n      );\n      throw new Error(message);\n    }\n    if (!this.client.session.keys.includes(topic)) {\n      const { message } = getInternalError(\n        \"NO_MATCHING_KEY\",\n        `session topic doesn't exist: ${topic}`,\n      );\n      throw new Error(message);\n    }\n    if (isExpired(this.client.session.get(topic).expiry)) {\n      await this.deleteSession({ topic });\n      const { message } = getInternalError(\"EXPIRED\", `session topic: ${topic}`);\n      throw new Error(message);\n    }\n\n    if (!this.client.core.crypto.keychain.has(topic)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `session topic does not exist in keychain: ${topic}`,\n      );\n      await this.deleteSession({ topic });\n      throw new Error(message);\n    }\n  }\n\n  private async isValidSessionOrPairingTopic(topic: string) {\n    if (this.client.session.keys.includes(topic)) {\n      await this.isValidSessionTopic(topic);\n    } else if (this.client.core.pairing.pairings.keys.includes(topic)) {\n      this.isValidPairingTopic(topic);\n    } else if (!isValidString(topic, false)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `session or pairing topic should be a string: ${topic}`,\n      );\n      throw new Error(message);\n    } else {\n      const { message } = getInternalError(\n        \"NO_MATCHING_KEY\",\n        `session or pairing topic doesn't exist: ${topic}`,\n      );\n      throw new Error(message);\n    }\n  }\n\n  private async isValidProposalId(id: any) {\n    if (!isValidId(id)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `proposal id should be a number: ${id}`,\n      );\n      throw new Error(message);\n    }\n    if (!this.client.proposal.keys.includes(id)) {\n      const { message } = getInternalError(\"NO_MATCHING_KEY\", `proposal id doesn't exist: ${id}`);\n      throw new Error(message);\n    }\n    if (isExpired(this.client.proposal.get(id).expiryTimestamp)) {\n      await this.deleteProposal(id);\n      const { message } = getInternalError(\"EXPIRED\", `proposal id: ${id}`);\n      throw new Error(message);\n    }\n  }\n\n  // ---------- Validation  ------------------------------------------- //\n\n  private isValidConnect: EnginePrivate[\"isValidConnect\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `connect() params: ${JSON.stringify(params)}`,\n      );\n      throw new Error(message);\n    }\n    const { pairingTopic, requiredNamespaces, optionalNamespaces, sessionProperties, relays } =\n      params;\n    if (!isUndefined(pairingTopic)) await this.isValidPairingTopic(pairingTopic);\n\n    if (!isValidRelays(relays, true)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `connect() relays: ${relays}`);\n      throw new Error(message);\n    }\n\n    // validate required namespaces only if they are defined\n    if (!isUndefined(requiredNamespaces) && isValidObject(requiredNamespaces) !== 0) {\n      this.validateNamespaces(requiredNamespaces, \"requiredNamespaces\");\n    }\n\n    // validate optional namespaces only if they are defined\n    if (!isUndefined(optionalNamespaces) && isValidObject(optionalNamespaces) !== 0) {\n      this.validateNamespaces(optionalNamespaces, \"optionalNamespaces\");\n    }\n\n    // validate session properties only if they are defined\n    if (!isUndefined(sessionProperties)) {\n      this.validateSessionProps(sessionProperties, \"sessionProperties\");\n    }\n  };\n\n  private validateNamespaces = (\n    namespaces: ProposalTypes.RequiredNamespaces | ProposalTypes.OptionalNamespaces,\n    type: string,\n  ) => {\n    const validRequiredNamespacesError = isValidRequiredNamespaces(namespaces, \"connect()\", type);\n    if (validRequiredNamespacesError) throw new Error(validRequiredNamespacesError.message);\n  };\n\n  private isValidApprove: EnginePrivate[\"isValidApprove\"] = async (params) => {\n    if (!isValidParams(params))\n      throw new Error(\n        getInternalError(\"MISSING_OR_INVALID\", `approve() params: ${params}`).message,\n      );\n    const { id, namespaces, relayProtocol, sessionProperties } = params;\n    await this.isValidProposalId(id);\n    const proposal = this.client.proposal.get(id);\n    const validNamespacesError = isValidNamespaces(namespaces, \"approve()\");\n    if (validNamespacesError) throw new Error(validNamespacesError.message);\n    const conformingNamespacesError = isConformingNamespaces(\n      proposal.requiredNamespaces,\n      namespaces,\n      \"approve()\",\n    );\n    if (conformingNamespacesError) throw new Error(conformingNamespacesError.message);\n    if (!isValidString(relayProtocol, true)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `approve() relayProtocol: ${relayProtocol}`,\n      );\n      throw new Error(message);\n    }\n\n    if (!isUndefined(sessionProperties)) {\n      this.validateSessionProps(sessionProperties, \"sessionProperties\");\n    }\n  };\n\n  private isValidReject: EnginePrivate[\"isValidReject\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `reject() params: ${params}`);\n      throw new Error(message);\n    }\n    const { id, reason } = params;\n    await this.isValidProposalId(id);\n    if (!isValidErrorReason(reason)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `reject() reason: ${JSON.stringify(reason)}`,\n      );\n      throw new Error(message);\n    }\n  };\n\n  private isValidSessionSettleRequest: EnginePrivate[\"isValidSessionSettleRequest\"] = (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `onSessionSettleRequest() params: ${params}`,\n      );\n      throw new Error(message);\n    }\n    const { relay, controller, namespaces, expiry } = params;\n    if (!isValidRelay(relay)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `onSessionSettleRequest() relay protocol should be a string`,\n      );\n      throw new Error(message);\n    }\n    const validControllerError = isValidController(controller, \"onSessionSettleRequest()\");\n    if (validControllerError) throw new Error(validControllerError.message);\n    const validNamespacesError = isValidNamespaces(namespaces, \"onSessionSettleRequest()\");\n    if (validNamespacesError) throw new Error(validNamespacesError.message);\n    if (isExpired(expiry)) {\n      const { message } = getInternalError(\"EXPIRED\", `onSessionSettleRequest()`);\n      throw new Error(message);\n    }\n  };\n\n  private isValidUpdate: EnginePrivate[\"isValidUpdate\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `update() params: ${params}`);\n      throw new Error(message);\n    }\n    const { topic, namespaces } = params;\n    await this.isValidSessionTopic(topic);\n    const session = this.client.session.get(topic);\n    const validNamespacesError = isValidNamespaces(namespaces, \"update()\");\n    if (validNamespacesError) throw new Error(validNamespacesError.message);\n    const conformingNamespacesError = isConformingNamespaces(\n      session.requiredNamespaces,\n      namespaces,\n      \"update()\",\n    );\n    if (conformingNamespacesError) throw new Error(conformingNamespacesError.message);\n    // TODO(ilja) - check if wallet\n  };\n\n  private isValidExtend: EnginePrivate[\"isValidExtend\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `extend() params: ${params}`);\n      throw new Error(message);\n    }\n    const { topic } = params;\n    await this.isValidSessionTopic(topic);\n  };\n\n  private isValidRequest: EnginePrivate[\"isValidRequest\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `request() params: ${params}`);\n      throw new Error(message);\n    }\n    const { topic, request, chainId, expiry } = params;\n    await this.isValidSessionTopic(topic);\n    const { namespaces } = this.client.session.get(topic);\n    if (!isValidNamespacesChainId(namespaces, chainId)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `request() chainId: ${chainId}`);\n      throw new Error(message);\n    }\n    if (!isValidRequest(request)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `request() ${JSON.stringify(request)}`,\n      );\n      throw new Error(message);\n    }\n    if (!isValidNamespacesRequest(namespaces, chainId, request.method)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `request() method: ${request.method}`,\n      );\n      throw new Error(message);\n    }\n    if (expiry && !isValidRequestExpiry(expiry, SESSION_REQUEST_EXPIRY_BOUNDARIES)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `request() expiry: ${expiry}. Expiry must be a number (in seconds) between ${SESSION_REQUEST_EXPIRY_BOUNDARIES.min} and ${SESSION_REQUEST_EXPIRY_BOUNDARIES.max}`,\n      );\n      throw new Error(message);\n    }\n  };\n\n  private isValidRespond: EnginePrivate[\"isValidRespond\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `respond() params: ${params}`);\n      throw new Error(message);\n    }\n    const { topic, response } = params;\n    try {\n      // if the session is already disconnected, we can't respond to the request so we need to delete it\n      await this.isValidSessionTopic(topic);\n    } catch (error) {\n      if (params?.response?.id) this.cleanupAfterResponse(params);\n      throw error;\n    }\n    if (!isValidResponse(response)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `respond() response: ${JSON.stringify(response)}`,\n      );\n      throw new Error(message);\n    }\n  };\n\n  private isValidPing: EnginePrivate[\"isValidPing\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `ping() params: ${params}`);\n      throw new Error(message);\n    }\n    const { topic } = params;\n    await this.isValidSessionOrPairingTopic(topic);\n  };\n\n  private isValidEmit: EnginePrivate[\"isValidEmit\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `emit() params: ${params}`);\n      throw new Error(message);\n    }\n    const { topic, event, chainId } = params;\n    await this.isValidSessionTopic(topic);\n    const { namespaces } = this.client.session.get(topic);\n    if (!isValidNamespacesChainId(namespaces, chainId)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `emit() chainId: ${chainId}`);\n      throw new Error(message);\n    }\n    if (!isValidEvent(event)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `emit() event: ${JSON.stringify(event)}`,\n      );\n      throw new Error(message);\n    }\n    if (!isValidNamespacesEvent(namespaces, chainId, event.name)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `emit() event: ${JSON.stringify(event)}`,\n      );\n      throw new Error(message);\n    }\n  };\n\n  private isValidDisconnect: EnginePrivate[\"isValidDisconnect\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `disconnect() params: ${params}`);\n      throw new Error(message);\n    }\n    const { topic } = params;\n    await this.isValidSessionOrPairingTopic(topic);\n  };\n\n  private getVerifyContext = async (hash: string, metadata: CoreTypes.Metadata) => {\n    const context: Verify.Context = {\n      verified: {\n        verifyUrl: metadata.verifyUrl || VERIFY_SERVER,\n        validation: \"UNKNOWN\",\n        origin: metadata.url || \"\",\n      },\n    };\n\n    try {\n      const result = await this.client.core.verify.resolve({\n        attestationId: hash,\n        verifyUrl: metadata.verifyUrl,\n      });\n      if (result) {\n        context.verified.origin = result.origin;\n        context.verified.isScam = result.isScam;\n        context.verified.validation =\n          result.origin === new URL(metadata.url).origin ? \"VALID\" : \"INVALID\";\n      }\n    } catch (e) {\n      this.client.logger.info(e);\n    }\n\n    this.client.logger.info(`Verify context: ${JSON.stringify(context)}`);\n    return context;\n  };\n\n  private validateSessionProps = (properties: ProposalTypes.SessionProperties, type: string) => {\n    Object.values(properties).forEach((property) => {\n      if (!isValidString(property, false)) {\n        const { message } = getInternalError(\n          \"MISSING_OR_INVALID\",\n          `${type} must be in Record<string, string> format. Received: ${JSON.stringify(property)}`,\n        );\n        throw new Error(message);\n      }\n    });\n  };\n}\n","import { Store } from \"@walletconnect/core\";\nimport { Logger } from \"@walletconnect/logger\";\nimport { ICore, ProposalTypes } from \"@walletconnect/types\";\n\nimport { SIGN_CLIENT_STORAGE_PREFIX, PROPOSAL_CONTEXT } from \"../constants\";\n\nexport class Proposal extends Store<number, ProposalTypes.Struct> {\n  constructor(public core: ICore, public logger: Logger) {\n    super(core, logger, PROPOSAL_CONTEXT, SIGN_CLIENT_STORAGE_PREFIX);\n  }\n}\n","import { Store } from \"@walletconnect/core\";\nimport { Logger } from \"@walletconnect/logger\";\nimport { ICore, SessionTypes } from \"@walletconnect/types\";\n\nimport { SIGN_CLIENT_STORAGE_PREFIX, SESSION_CONTEXT } from \"../constants\";\n\nexport class Session extends Store<string, SessionTypes.Struct> {\n  constructor(public core: ICore, public logger: Logger) {\n    super(core, logger, SESSION_CONTEXT, SIGN_CLIENT_STORAGE_PREFIX);\n  }\n}\n","import { Store } from \"@walletconnect/core\";\nimport { Logger } from \"@walletconnect/logger\";\nimport { ICore, PendingRequestTypes } from \"@walletconnect/types\";\nimport { REQUEST_CONTEXT, SIGN_CLIENT_STORAGE_PREFIX } from \"../constants\";\n\nexport class PendingRequest extends Store<number, PendingRequestTypes.Struct> {\n  constructor(public core: ICore, public logger: Logger) {\n    super(\n      core,\n      logger,\n      REQUEST_CONTEXT,\n      SIGN_CLIENT_STORAGE_PREFIX,\n      (val: PendingRequestTypes.Struct) => val.id,\n    );\n  }\n}\n","import { Core } from \"@walletconnect/core\";\nimport {\n  generateChildLogger,\n  getDefaultLoggerOptions,\n  getLoggerContext,\n  pino,\n} from \"@walletconnect/logger\";\nimport { SignClientTypes, ISignClient, ISignClientEvents, EngineTypes } from \"@walletconnect/types\";\nimport { getAppMetadata } from \"@walletconnect/utils\";\nimport { EventEmitter } from \"events\";\nimport { SIGN_CLIENT_DEFAULT, SIGN_CLIENT_PROTOCOL, SIGN_CLIENT_VERSION } from \"./constants\";\nimport { Engine, PendingRequest, Proposal, Session } from \"./controllers\";\n\nexport class SignClient extends ISignClient {\n  public readonly protocol = SIGN_CLIENT_PROTOCOL;\n  public readonly version = SIGN_CLIENT_VERSION;\n  public readonly name: ISignClient[\"name\"] = SIGN_CLIENT_DEFAULT.name;\n  public readonly metadata: ISignClient[\"metadata\"];\n\n  public core: ISignClient[\"core\"];\n  public logger: ISignClient[\"logger\"];\n  public events: ISignClient[\"events\"] = new EventEmitter();\n  public engine: ISignClient[\"engine\"];\n  public session: ISignClient[\"session\"];\n  public proposal: ISignClient[\"proposal\"];\n  public pendingRequest: ISignClient[\"pendingRequest\"];\n\n  static async init(opts?: SignClientTypes.Options) {\n    const client = new SignClient(opts);\n    await client.initialize();\n\n    return client;\n  }\n\n  constructor(opts?: SignClientTypes.Options) {\n    super(opts);\n\n    this.name = opts?.name || SIGN_CLIENT_DEFAULT.name;\n    this.metadata = opts?.metadata || getAppMetadata();\n\n    const logger =\n      typeof opts?.logger !== \"undefined\" && typeof opts?.logger !== \"string\"\n        ? opts.logger\n        : pino(getDefaultLoggerOptions({ level: opts?.logger || SIGN_CLIENT_DEFAULT.logger }));\n\n    this.core = opts?.core || new Core(opts);\n    this.logger = generateChildLogger(logger, this.name);\n    this.session = new Session(this.core, this.logger);\n    this.proposal = new Proposal(this.core, this.logger);\n    this.pendingRequest = new PendingRequest(this.core, this.logger);\n    this.engine = new Engine(this);\n  }\n\n  get context() {\n    return getLoggerContext(this.logger);\n  }\n\n  get pairing() {\n    return this.core.pairing.pairings;\n  }\n\n  // ---------- Events ----------------------------------------------- //\n\n  public on: ISignClientEvents[\"on\"] = (name, listener) => {\n    return this.events.on(name, listener);\n  };\n\n  public once: ISignClientEvents[\"once\"] = (name, listener) => {\n    return this.events.once(name, listener);\n  };\n\n  public off: ISignClientEvents[\"off\"] = (name, listener) => {\n    return this.events.off(name, listener);\n  };\n\n  public removeListener: ISignClientEvents[\"removeListener\"] = (name, listener) => {\n    return this.events.removeListener(name, listener);\n  };\n\n  public removeAllListeners: ISignClientEvents[\"removeAllListeners\"] = (name) => {\n    return this.events.removeAllListeners(name);\n  };\n\n  // ---------- Engine ----------------------------------------------- //\n\n  public connect: ISignClient[\"connect\"] = async (params) => {\n    try {\n      return await this.engine.connect(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public pair: ISignClient[\"pair\"] = async (params) => {\n    try {\n      return await this.engine.pair(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public approve: ISignClient[\"approve\"] = async (params) => {\n    try {\n      return await this.engine.approve(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public reject: ISignClient[\"reject\"] = async (params) => {\n    try {\n      return await this.engine.reject(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public update: ISignClient[\"update\"] = async (params) => {\n    try {\n      return await this.engine.update(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public extend: ISignClient[\"extend\"] = async (params) => {\n    try {\n      return await this.engine.extend(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public request: ISignClient[\"request\"] = async <T>(params: EngineTypes.RequestParams) => {\n    try {\n      return await this.engine.request<T>(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public respond: ISignClient[\"respond\"] = async (params) => {\n    try {\n      return await this.engine.respond(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public ping: ISignClient[\"ping\"] = async (params) => {\n    try {\n      return await this.engine.ping(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public emit: ISignClient[\"emit\"] = async (params) => {\n    try {\n      return await this.engine.emit(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public disconnect: ISignClient[\"disconnect\"] = async (params) => {\n    try {\n      return await this.engine.disconnect(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public find: ISignClient[\"find\"] = (params) => {\n    try {\n      return this.engine.find(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public getPendingSessionRequests: ISignClient[\"getPendingSessionRequests\"] = () => {\n    try {\n      return this.engine.getPendingSessionRequests();\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  // ---------- Private ----------------------------------------------- //\n\n  private async initialize() {\n    this.logger.trace(`Initialized`);\n    try {\n      await this.core.start();\n      await this.session.init();\n      await this.proposal.init();\n      await this.pendingRequest.init();\n      await this.engine.init();\n      this.core.verify.init({ verifyUrl: this.metadata.verifyUrl });\n      this.logger.info(`SignClient Initialization Success`);\n    } catch (error: any) {\n      this.logger.info(`SignClient Initialization Failure`);\n      this.logger.error(error.message);\n      throw error;\n    }\n  }\n}\n","import { SignClient as Client } from \"./client\";\nimport { Session } from \"./controllers/session\";\nexport * from \"./constants\";\n\nexport const SessionStore = Session;\nexport const SignClient = Client;\nexport default Client;\n"],"names":["THIRTY_DAYS","SEVEN_DAYS","FIVE_MINUTES","ONE_DAY","THIRTY_SECONDS","IEngine","client","ENGINE_CONTEXT","EventEmmiter","TYPE_1","ENGINE_QUEUE_STATES","ONE_SECOND","ENGINE_RPC_OPTS","toMiliseconds","params","connectParams","__spreadProps","__spreadValues","pairingTopic","requiredNamespaces","optionalNamespaces","sessionProperties","relays","topic","uri","active","newTopic","newUri","publicKey","expiry","expiryTimestamp","calcExpiry","proposal","RELAYER_DEFAULT_PROTOCOL","reject","resolve","approval","createDelayedPromise","PROPOSAL_EXPIRY_MESSAGE","engineEvent","error","session","completeSession","message","getInternalError","id","relayProtocol","namespaces","proposer","selfPublicKey","peerPublicKey","sessionTopic","getSdkError","sessionSettle","SESSION_EXPIRY","reason","acknowledged","chainId","request","payloadId","done","result","wcDeepLink","getDeepLink","WALLETCONNECT_DEEPLINK_CHOICE","handleDeeplinkRedirect","response","isJsonRpcResult","isJsonRpcError","event","isSessionCompatible","pairing","duplicates","p","_a","_b","expirerHasDeleted","emitEvent","self","e","r","pendingRequest","verifyContext","args","method","relayRpcId","clientRpcId","throwOnFailedPublish","payload","formatJsonRpcRequest","isBrowser","METHODS_TO_VERIFY","hash","hashMessage","opts","formatJsonRpcResult","record","formatJsonRpcError","sessionTopics","proposalIds","toCleanup","isExpired","reqMethod","resMethod","err","subscriptionId","relay","controller","memoryKey","lastSessionUpdateId","MemoryStore","lastId","currentId","_topic","RELAYER_EVENTS","pendingRequests","isValidParams","isUndefined","isValidRelays","isValidObject","type","validRequiredNamespacesError","isValidRequiredNamespaces","validNamespacesError","isValidNamespaces","conformingNamespacesError","isConformingNamespaces","isValidString","isValidErrorReason","isValidRelay","validControllerError","isValidController","isValidNamespacesChainId","isValidRequest","isValidNamespacesRequest","isValidRequestExpiry","SESSION_REQUEST_EXPIRY_BOUNDARIES","isValidResponse","isValidEvent","isValidNamespacesEvent","metadata","context","VERIFY_SERVER","properties","property","isJsonRpcRequest","isJsonRpcResponse","EXPIRER_EVENTS","parseExpirerTarget","PAIRING_EVENTS","isValidId","Store","core","logger","PROPOSAL_CONTEXT","SIGN_CLIENT_STORAGE_PREFIX","SESSION_CONTEXT","REQUEST_CONTEXT","val","SignClient","ISignClient","SIGN_CLIENT_PROTOCOL","SIGN_CLIENT_VERSION","SIGN_CLIENT_DEFAULT","EventEmitter","name","listener","getAppMetadata","pino","getDefaultLoggerOptions","Core","generateChildLogger","Session","Proposal","PendingRequest","Engine","getLoggerContext","Client"],"mappings":"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"}