import { IEngine } from "@walletconnect/types";
export declare class Engine extends IEngine {
    name: string;
    private events;
    private initialized;
    private ignoredPayloadTypes;
    private requestQueue;
    private sessionRequestQueue;
    private requestQueueDelay;
    constructor(client: IEngine["client"]);
    init: IEngine["init"];
    connect: IEngine["connect"];
    pair: IEngine["pair"];
    approve: IEngine["approve"];
    reject: IEngine["reject"];
    update: IEngine["update"];
    extend: IEngine["extend"];
    request: IEngine["request"];
    respond: IEngine["respond"];
    ping: IEngine["ping"];
    emit: IEngine["emit"];
    disconnect: IEngine["disconnect"];
    find: IEngine["find"];
    getPendingSessionRequests: IEngine["getPendingSessionRequests"];
    private cleanupDuplicatePairings;
    private deleteSession;
    private deleteProposal;
    private deletePendingSessionRequest;
    private setExpiry;
    private setProposal;
    private setPendingSessionRequest;
    private sendRequest;
    private sendResult;
    private sendError;
    private cleanup;
    private isInitialized;
    private registerRelayerEvents;
    private onRelayEventRequest;
    private processRequestsQueue;
    private processRequest;
    private onRelayEventResponse;
    private onRelayEventUnknownPayload;
    private onSessionProposeRequest;
    private onSessionProposeResponse;
    private onSessionSettleRequest;
    private onSessionSettleResponse;
    private onSessionUpdateRequest;
    private isRequestOutOfSync;
    private onSessionUpdateResponse;
    private onSessionExtendRequest;
    private onSessionExtendResponse;
    private onSessionPingRequest;
    private onSessionPingResponse;
    private onSessionDeleteRequest;
    private onSessionRequest;
    private onSessionRequestResponse;
    private onSessionEventRequest;
    private addSessionRequestToSessionRequestQueue;
    private cleanupAfterResponse;
    private cleanupPendingSentRequestsForTopic;
    private processSessionRequestQueue;
    private registerExpirerEvents;
    private registerPairingEvents;
    private onPairingCreated;
    private isValidPairingTopic;
    private isValidSessionTopic;
    private isValidSessionOrPairingTopic;
    private isValidProposalId;
    private isValidConnect;
    private validateNamespaces;
    private isValidApprove;
    private isValidReject;
    private isValidSessionSettleRequest;
    private isValidUpdate;
    private isValidExtend;
    private isValidRequest;
    private isValidRespond;
    private isValidPing;
    private isValidEmit;
    private isValidDisconnect;
    private getVerifyContext;
    private validateSessionProps;
}
//# sourceMappingURL=engine.d.ts.map