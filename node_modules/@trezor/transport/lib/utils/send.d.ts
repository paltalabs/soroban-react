import { Root } from 'protobufjs/light';
import { TransportProtocolEncode } from '@trezor/protocol';
import { AsyncResultWithTypedError } from '../types';
export declare const createChunks: (data: Buffer, chunkHeader: Buffer, chunkSize: number) => Buffer[];
interface BuildMessageProps {
    messages: Root;
    name: string;
    data: Record<string, unknown>;
    encode: TransportProtocolEncode;
}
export declare const buildMessage: ({ messages, name, data, encode }: BuildMessageProps) => Buffer;
export declare const sendChunks: <T, E>(chunks: Buffer[], apiWrite: (chunk: Buffer) => AsyncResultWithTypedError<T, E>) => Promise<import("../types").ErrorGeneric<E> | {
    success: true;
    payload: undefined;
}>;
export {};
//# sourceMappingURL=send.d.ts.map