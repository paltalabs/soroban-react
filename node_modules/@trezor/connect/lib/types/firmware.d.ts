import { DeviceModelInternal } from '@trezor/protobuf';
export type FirmwareRange = Record<DeviceModelInternal, {
    min: string;
    max: string;
}>;
export type VersionArray = [number, number, number];
export type FirmwareRelease = {
    required: boolean;
    url: string;
    fingerprint: string;
    changelog: string | string[];
    changelog_bitcoinonly?: string | string[];
    firmware_revision?: string;
    version: VersionArray;
    min_firmware_version: VersionArray;
    min_bootloader_version: VersionArray;
    bootloader_version?: VersionArray;
    url_bitcoinonly?: string;
    fingerprint_bitcoinonly?: string;
    channel?: string;
    translations?: string[];
};
export type IntermediaryVersion = 1 | 2 | 3;
export declare const IntermediaryVersion: import("@trezor/schema-utils").TUnion<[import("@trezor/schema-utils").TLiteral<1>, import("@trezor/schema-utils").TLiteral<2>, import("@trezor/schema-utils").TLiteral<3>]>;
export type ReleaseInfo = {
    changelog: FirmwareRelease[] | null;
    release: FirmwareRelease;
    isRequired: boolean | null;
    isNewer: boolean | null;
    intermediaryVersion?: IntermediaryVersion;
    translations?: string[];
};
//# sourceMappingURL=firmware.d.ts.map