"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.enhanceMessageWithAnalytics = void 0;
const connect_analytics_1 = require("@trezor/connect-analytics");
const events_1 = require("../events");
const enhanceMessageWithAnalytics = (message, data) => {
    var _a, _b, _c, _d, _e, _f, _g, _h;
    switch (message.type) {
        case events_1.UI_REQUEST.REQUEST_CONFIRMATION: {
            const { device } = data;
            return {
                ...message,
                payload: {
                    ...message.payload,
                    analytics: {
                        type: connect_analytics_1.EventType.DeviceSelected,
                        payload: {
                            mode: (device === null || device === void 0 ? void 0 : device.mode) || '',
                            pinProtection: ((_a = device === null || device === void 0 ? void 0 : device.features) === null || _a === void 0 ? void 0 : _a.pin_protection) || '',
                            passphraseProtection: ((_b = device === null || device === void 0 ? void 0 : device.features) === null || _b === void 0 ? void 0 : _b.passphrase_protection) || '',
                            backupType: ((_c = device === null || device === void 0 ? void 0 : device.features) === null || _c === void 0 ? void 0 : _c.backup_type) || 'Bip39',
                            language: ((_d = device === null || device === void 0 ? void 0 : device.features) === null || _d === void 0 ? void 0 : _d.language) || '',
                            model: ((_e = device === null || device === void 0 ? void 0 : device.features) === null || _e === void 0 ? void 0 : _e.internal_model) || '',
                            vendor: ((_f = device === null || device === void 0 ? void 0 : device.features) === null || _f === void 0 ? void 0 : _f.vendor) || '',
                            firmwareRevision: ((_g = device === null || device === void 0 ? void 0 : device.features) === null || _g === void 0 ? void 0 : _g.revision) || '',
                            firmwareType: (device === null || device === void 0 ? void 0 : device.firmwareType) || '',
                            bootloaderHash: ((_h = device === null || device === void 0 ? void 0 : device.features) === null || _h === void 0 ? void 0 : _h.bootloader_hash) || '',
                        },
                    },
                },
            };
        }
        default:
            return message;
    }
};
exports.enhanceMessageWithAnalytics = enhanceMessageWithAnalytics;
//# sourceMappingURL=analyticsInfo.js.map