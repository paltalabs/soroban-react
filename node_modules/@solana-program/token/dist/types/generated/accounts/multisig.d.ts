/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */
import { fetchEncodedAccount, fetchEncodedAccounts, type Account, type Address, type Codec, type Decoder, type EncodedAccount, type Encoder, type FetchAccountConfig, type FetchAccountsConfig, type MaybeAccount, type MaybeEncodedAccount } from '@solana/web3.js';
export type Multisig = {
    /** Number of signers required. */
    m: number;
    /** Number of valid signers. */
    n: number;
    /** Is `true` if this structure has been initialized. */
    isInitialized: boolean;
    /** Signer public keys. */
    signers: Array<Address>;
};
export type MultisigArgs = Multisig;
export declare function getMultisigEncoder(): Encoder<MultisigArgs>;
export declare function getMultisigDecoder(): Decoder<Multisig>;
export declare function getMultisigCodec(): Codec<MultisigArgs, Multisig>;
export declare function decodeMultisig<TAddress extends string = string>(encodedAccount: EncodedAccount<TAddress>): Account<Multisig, TAddress>;
export declare function decodeMultisig<TAddress extends string = string>(encodedAccount: MaybeEncodedAccount<TAddress>): MaybeAccount<Multisig, TAddress>;
export declare function fetchMultisig<TAddress extends string = string>(rpc: Parameters<typeof fetchEncodedAccount>[0], address: Address<TAddress>, config?: FetchAccountConfig): Promise<Account<Multisig, TAddress>>;
export declare function fetchMaybeMultisig<TAddress extends string = string>(rpc: Parameters<typeof fetchEncodedAccount>[0], address: Address<TAddress>, config?: FetchAccountConfig): Promise<MaybeAccount<Multisig, TAddress>>;
export declare function fetchAllMultisig(rpc: Parameters<typeof fetchEncodedAccounts>[0], addresses: Array<Address>, config?: FetchAccountsConfig): Promise<Account<Multisig>[]>;
export declare function fetchAllMaybeMultisig(rpc: Parameters<typeof fetchEncodedAccounts>[0], addresses: Array<Address>, config?: FetchAccountsConfig): Promise<MaybeAccount<Multisig>[]>;
export declare function getMultisigSize(): number;
//# sourceMappingURL=multisig.d.ts.map