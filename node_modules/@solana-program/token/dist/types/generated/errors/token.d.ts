/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */
import { type Address, type SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM, type SolanaError } from '@solana/web3.js';
/** NotRentExempt: Lamport balance below rent-exempt threshold */
export declare const TOKEN_ERROR__NOT_RENT_EXEMPT = 0;
/** InsufficientFunds: Insufficient funds */
export declare const TOKEN_ERROR__INSUFFICIENT_FUNDS = 1;
/** InvalidMint: Invalid Mint */
export declare const TOKEN_ERROR__INVALID_MINT = 2;
/** MintMismatch: Account not associated with this Mint */
export declare const TOKEN_ERROR__MINT_MISMATCH = 3;
/** OwnerMismatch: Owner does not match */
export declare const TOKEN_ERROR__OWNER_MISMATCH = 4;
/** FixedSupply: Fixed supply */
export declare const TOKEN_ERROR__FIXED_SUPPLY = 5;
/** AlreadyInUse: Already in use */
export declare const TOKEN_ERROR__ALREADY_IN_USE = 6;
/** InvalidNumberOfProvidedSigners: Invalid number of provided signers */
export declare const TOKEN_ERROR__INVALID_NUMBER_OF_PROVIDED_SIGNERS = 7;
/** InvalidNumberOfRequiredSigners: Invalid number of required signers */
export declare const TOKEN_ERROR__INVALID_NUMBER_OF_REQUIRED_SIGNERS = 8;
/** UninitializedState: State is unititialized */
export declare const TOKEN_ERROR__UNINITIALIZED_STATE = 9;
/** NativeNotSupported: Instruction does not support native tokens */
export declare const TOKEN_ERROR__NATIVE_NOT_SUPPORTED = 10;
/** NonNativeHasBalance: Non-native account can only be closed if its balance is zero */
export declare const TOKEN_ERROR__NON_NATIVE_HAS_BALANCE = 11;
/** InvalidInstruction: Invalid instruction */
export declare const TOKEN_ERROR__INVALID_INSTRUCTION = 12;
/** InvalidState: State is invalid for requested operation */
export declare const TOKEN_ERROR__INVALID_STATE = 13;
/** Overflow: Operation overflowed */
export declare const TOKEN_ERROR__OVERFLOW = 14;
/** AuthorityTypeNotSupported: Account does not support specified authority type */
export declare const TOKEN_ERROR__AUTHORITY_TYPE_NOT_SUPPORTED = 15;
/** MintCannotFreeze: This token mint cannot freeze accounts */
export declare const TOKEN_ERROR__MINT_CANNOT_FREEZE = 16;
/** AccountFrozen: Account is frozen */
export declare const TOKEN_ERROR__ACCOUNT_FROZEN = 17;
/** MintDecimalsMismatch: The provided decimals value different from the Mint decimals */
export declare const TOKEN_ERROR__MINT_DECIMALS_MISMATCH = 18;
/** NonNativeNotSupported: Instruction does not support non-native tokens */
export declare const TOKEN_ERROR__NON_NATIVE_NOT_SUPPORTED = 19;
export type TokenError = typeof TOKEN_ERROR__ACCOUNT_FROZEN | typeof TOKEN_ERROR__ALREADY_IN_USE | typeof TOKEN_ERROR__AUTHORITY_TYPE_NOT_SUPPORTED | typeof TOKEN_ERROR__FIXED_SUPPLY | typeof TOKEN_ERROR__INSUFFICIENT_FUNDS | typeof TOKEN_ERROR__INVALID_INSTRUCTION | typeof TOKEN_ERROR__INVALID_MINT | typeof TOKEN_ERROR__INVALID_NUMBER_OF_PROVIDED_SIGNERS | typeof TOKEN_ERROR__INVALID_NUMBER_OF_REQUIRED_SIGNERS | typeof TOKEN_ERROR__INVALID_STATE | typeof TOKEN_ERROR__MINT_CANNOT_FREEZE | typeof TOKEN_ERROR__MINT_DECIMALS_MISMATCH | typeof TOKEN_ERROR__MINT_MISMATCH | typeof TOKEN_ERROR__NATIVE_NOT_SUPPORTED | typeof TOKEN_ERROR__NON_NATIVE_HAS_BALANCE | typeof TOKEN_ERROR__NON_NATIVE_NOT_SUPPORTED | typeof TOKEN_ERROR__NOT_RENT_EXEMPT | typeof TOKEN_ERROR__OVERFLOW | typeof TOKEN_ERROR__OWNER_MISMATCH | typeof TOKEN_ERROR__UNINITIALIZED_STATE;
export declare function getTokenErrorMessage(code: TokenError): string;
export declare function isTokenError<TProgramErrorCode extends TokenError>(error: unknown, transactionMessage: {
    instructions: Record<number, {
        programAddress: Address;
    }>;
}, code?: TProgramErrorCode): error is SolanaError<typeof SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM> & Readonly<{
    context: Readonly<{
        code: TProgramErrorCode;
    }>;
}>;
//# sourceMappingURL=token.d.ts.map