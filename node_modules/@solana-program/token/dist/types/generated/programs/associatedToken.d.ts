/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */
import { type Address, type ReadonlyUint8Array } from '@solana/web3.js';
import { type ParsedCreateAssociatedTokenIdempotentInstruction, type ParsedCreateAssociatedTokenInstruction, type ParsedRecoverNestedAssociatedTokenInstruction } from '../instructions';
export declare const ASSOCIATED_TOKEN_PROGRAM_ADDRESS: Address<"ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL">;
export declare enum AssociatedTokenInstruction {
    CreateAssociatedToken = 0,
    CreateAssociatedTokenIdempotent = 1,
    RecoverNestedAssociatedToken = 2
}
export declare function identifyAssociatedTokenInstruction(instruction: {
    data: ReadonlyUint8Array;
} | ReadonlyUint8Array): AssociatedTokenInstruction;
export type ParsedAssociatedTokenInstruction<TProgram extends string = 'ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL'> = ({
    instructionType: AssociatedTokenInstruction.CreateAssociatedToken;
} & ParsedCreateAssociatedTokenInstruction<TProgram>) | ({
    instructionType: AssociatedTokenInstruction.CreateAssociatedTokenIdempotent;
} & ParsedCreateAssociatedTokenIdempotentInstruction<TProgram>) | ({
    instructionType: AssociatedTokenInstruction.RecoverNestedAssociatedToken;
} & ParsedRecoverNestedAssociatedTokenInstruction<TProgram>);
//# sourceMappingURL=associatedToken.d.ts.map