/**
 * Quick script to re-number values
 */
declare const input: {
    temBAD_SEND_XRP_PATHS: number;
    temBAD_SEQUENCE: number;
    temBAD_SIGNATURE: number;
    temBAD_SRC_ACCOUNT: number;
    temBAD_TRANSFER_RATE: number;
    temDST_IS_SRC: number;
    temDST_NEEDED: number;
    temINVALID: number;
    temINVALID_FLAG: number;
    temREDUNDANT: number;
    temRIPPLE_EMPTY: number;
    temDISABLED: number;
    temBAD_SIGNER: number;
    temBAD_QUORUM: number;
    temBAD_WEIGHT: number;
    temBAD_TICK_SIZE: number;
    temINVALID_ACCOUNT_ID: number;
    temCANNOT_PREAUTH_SELF: number;
    temUNCERTAIN: number;
    temUNKNOWN: number;
    tefFAILURE: number;
    tefALREADY: number;
    tefBAD_ADD_AUTH: number;
    tefBAD_AUTH: number;
    tefBAD_LEDGER: number;
    tefCREATED: number;
    tefEXCEPTION: number;
    tefINTERNAL: number;
    tefNO_AUTH_REQUIRED: number;
    tefPAST_SEQ: number;
    tefWRONG_PRIOR: number;
    tefMASTER_DISABLED: number;
    tefMAX_LEDGER: number;
    tefBAD_SIGNATURE: number;
    tefBAD_QUORUM: number;
    tefNOT_MULTI_SIGNING: number;
    tefBAD_AUTH_MASTER: number;
    tefINVARIANT_FAILED: number;
    tefTOO_BIG: number;
    terRETRY: number;
    terFUNDS_SPENT: number;
    terINSUF_FEE_B: number;
    terNO_ACCOUNT: number;
    terNO_AUTH: number;
    terNO_LINE: number;
    terOWNERS: number;
    terPRE_SEQ: number;
    terLAST: number;
    terNO_RIPPLE: number;
    terQUEUED: number;
    tesSUCCESS: number;
    tecCLAIM: number;
    tecPATH_PARTIAL: number;
    tecUNFUNDED_ADD: number;
    tecUNFUNDED_OFFER: number;
    tecUNFUNDED_PAYMENT: number;
    tecFAILED_PROCESSING: number;
    tecDIR_FULL: number;
    tecINSUF_RESERVE_LINE: number;
    tecINSUF_RESERVE_OFFER: number;
    tecNO_DST: number;
    tecNO_DST_INSUF_XRP: number;
    tecNO_LINE_INSUF_RESERVE: number;
    tecNO_LINE_REDUNDANT: number;
    tecPATH_DRY: number;
    tecUNFUNDED: number;
    tecNO_ALTERNATIVE_KEY: number;
    tecNO_REGULAR_KEY: number;
    tecOWNERS: number;
    tecNO_ISSUER: number;
    tecNO_AUTH: number;
    tecNO_LINE: number;
    tecINSUFF_FEE: number;
    tecFROZEN: number;
    tecNO_TARGET: number;
    tecNO_PERMISSION: number;
    tecNO_ENTRY: number;
    tecINSUFFICIENT_RESERVE: number;
    tecNEED_MASTER_KEY: number;
    tecDST_TAG_NEEDED: number;
    tecINTERNAL: number;
    tecOVERSIZE: number;
    tecCRYPTOCONDITION_ERROR: number;
    tecINVARIANT_FAILED: number;
    tecEXPIRED: number;
    tecDUPLICATE: number;
    tecKILLED: number;
    tecHAS_OBLIGATIONS: number;
    tecTOO_SOON: number;
};
declare let startingFromTemBADSENDXRPPATHS: number;
declare let startingFromTefFAILURE: number;
declare let startingFromTerRETRY: number;
declare const tesSUCCESS = 0;
declare let startingFromTecCLAIM: number;
declare const startingFromTecDIRFULL = 121;
declare let previousKey: string;
