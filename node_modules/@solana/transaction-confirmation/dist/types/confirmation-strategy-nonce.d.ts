import type { Address } from '@solana/addresses';
import type { GetAccountInfoApi, Rpc } from '@solana/rpc';
import type { AccountNotificationsApi, RpcSubscriptions } from '@solana/rpc-subscriptions';
import type { Commitment } from '@solana/rpc-types';
import { Nonce } from '@solana/transaction-messages';
type GetNonceInvalidationPromiseFn = (config: {
    abortSignal: AbortSignal;
    commitment: Commitment;
    currentNonceValue: Nonce;
    nonceAccountAddress: Address;
}) => Promise<void>;
type CreateNonceInvalidationPromiseFactoryConfig<TCluster> = {
    rpc: Rpc<GetAccountInfoApi> & {
        '~cluster'?: TCluster;
    };
    rpcSubscriptions: RpcSubscriptions<AccountNotificationsApi> & {
        '~cluster'?: TCluster;
    };
};
export declare function createNonceInvalidationPromiseFactory({ rpc, rpcSubscriptions, }: CreateNonceInvalidationPromiseFactoryConfig<'devnet'>): GetNonceInvalidationPromiseFn;
export declare function createNonceInvalidationPromiseFactory({ rpc, rpcSubscriptions, }: CreateNonceInvalidationPromiseFactoryConfig<'testnet'>): GetNonceInvalidationPromiseFn;
export declare function createNonceInvalidationPromiseFactory({ rpc, rpcSubscriptions, }: CreateNonceInvalidationPromiseFactoryConfig<'mainnet'>): GetNonceInvalidationPromiseFn;
export {};
//# sourceMappingURL=confirmation-strategy-nonce.d.ts.map