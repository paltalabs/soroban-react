import { FixedSizeCodec, FixedSizeDecoder, FixedSizeEncoder } from '@solana/codecs-core';
export type Address<TAddress extends string = string> = TAddress & {
    readonly __brand: unique symbol;
};
export declare function isAddress(putativeAddress: string): putativeAddress is Address<typeof putativeAddress>;
export declare function assertIsAddress(putativeAddress: string): asserts putativeAddress is Address<typeof putativeAddress>;
export declare function address<TAddress extends string = string>(putativeAddress: TAddress): Address<TAddress>;
export declare function getAddressEncoder(): FixedSizeEncoder<Address, 32>;
export declare function getAddressDecoder(): FixedSizeDecoder<Address, 32>;
export declare function getAddressCodec(): FixedSizeCodec<Address, Address, 32>;
export declare function getAddressComparator(): (x: string, y: string) => number;
//# sourceMappingURL=address.d.ts.map