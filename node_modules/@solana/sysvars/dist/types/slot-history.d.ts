import { type FetchAccountConfig } from '@solana/accounts';
import { type FixedSizeCodec, type FixedSizeDecoder, type FixedSizeEncoder } from '@solana/codecs';
import type { GetAccountInfoApi } from '@solana/rpc-api';
import type { Rpc } from '@solana/rpc-spec';
import type { Slot } from '@solana/rpc-types';
declare const SLOT_HISTORY_ACCOUNT_DATA_STATIC_SIZE: number;
type SysvarSlotHistorySize = typeof SLOT_HISTORY_ACCOUNT_DATA_STATIC_SIZE;
/**
 * The `SlotHistory` sysvar.
 *
 * A bitvector of slots present over the last epoch.
 */
export type SysvarSlotHistory = {
    bits: bigint[];
    nextSlot: Slot;
};
export declare function getSysvarSlotHistoryEncoder(): FixedSizeEncoder<SysvarSlotHistory, SysvarSlotHistorySize>;
export declare function getSysvarSlotHistoryDecoder(): FixedSizeDecoder<SysvarSlotHistory, SysvarSlotHistorySize>;
export declare function getSysvarSlotHistoryCodec(): FixedSizeCodec<SysvarSlotHistory, SysvarSlotHistory, SysvarSlotHistorySize>;
/**
 * Fetch the `SlotHistory` sysvar.
 *
 * A bitvector of slots present over the last epoch.
 */
export declare function fetchSysvarSlotHistory(rpc: Rpc<GetAccountInfoApi>, config?: FetchAccountConfig): Promise<SysvarSlotHistory>;
export {};
//# sourceMappingURL=slot-history.d.ts.map