import { type FetchAccountConfig } from '@solana/accounts';
import { type VariableSizeCodec, type VariableSizeDecoder, type VariableSizeEncoder } from '@solana/codecs';
import type { GetAccountInfoApi } from '@solana/rpc-api';
import type { Rpc } from '@solana/rpc-spec';
import { type Blockhash, type Slot } from '@solana/rpc-types';
type Entry = Readonly<{
    hash: Blockhash;
    slot: Slot;
}>;
/**
 * The `SlotHashes` sysvar.
 *
 * The most recent hashes of a slot's parent banks.
 */
export type SysvarSlotHashes = Entry[];
export declare function getSysvarSlotHashesEncoder(): VariableSizeEncoder<SysvarSlotHashes>;
export declare function getSysvarSlotHashesDecoder(): VariableSizeDecoder<SysvarSlotHashes>;
export declare function getSysvarSlotHashesCodec(): VariableSizeCodec<SysvarSlotHashes>;
/**
 * Fetch the `SlotHashes` sysvar.
 *
 * The most recent hashes of a slot's parent banks.
 */
export declare function fetchSysvarSlotHashes(rpc: Rpc<GetAccountInfoApi>, config?: FetchAccountConfig): Promise<SysvarSlotHashes>;
export {};
//# sourceMappingURL=slot-hashes.d.ts.map