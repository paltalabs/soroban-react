import { type FetchAccountConfig } from '@solana/accounts';
import { type FixedSizeCodec, type FixedSizeDecoder, type FixedSizeEncoder } from '@solana/codecs';
import type { GetAccountInfoApi } from '@solana/rpc-api';
import type { Rpc } from '@solana/rpc-spec';
import { type Lamports } from '@solana/rpc-types';
type SysvarRentSize = 17;
/**
 * The `Rent` sysvar.
 *
 * Configuration for network rent.
 */
export type SysvarRent = Readonly<{
    burnPercent: number;
    exemptionThreshold: number;
    lamportsPerByteYear: Lamports;
}>;
export declare function getSysvarRentEncoder(): FixedSizeEncoder<SysvarRent, SysvarRentSize>;
export declare function getSysvarRentDecoder(): FixedSizeDecoder<SysvarRent, SysvarRentSize>;
export declare function getSysvarRentCodec(): FixedSizeCodec<SysvarRent, SysvarRent, SysvarRentSize>;
/**
 * Fetch the `Rent` sysvar.
 *
 * Configuration for network rent.
 */
export declare function fetchSysvarRent(rpc: Rpc<GetAccountInfoApi>, config?: FetchAccountConfig): Promise<SysvarRent>;
export {};
//# sourceMappingURL=rent.d.ts.map