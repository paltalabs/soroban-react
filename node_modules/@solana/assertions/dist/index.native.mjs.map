{"version":3,"sources":["../src/subtle-crypto.ts","../src/crypto.ts"],"names":["SolanaError"],"mappings":";;;AAiBA,IAAI,qBAAA,CAAA;AACJ,eAAe,wBAAwB,MAAwC,EAAA;AAC3E,EAAA,IAAI,0BAA0B,KAAW,CAAA,EAAA;AACrC,IAAwB,qBAAA,GAAA,IAAI,QAAQ,CAAW,OAAA,KAAA;AAC3C,MACK,MAAA,CAAA,WAAA;AAAA,QAAY,SAAA;AAAA;AAAA,QAA6B,KAAA;AAAA,QAAO,CAAC,QAAQ,QAAQ,CAAA;AAAA,OAAC,CAClE,KAAK,MAAM;AACR,QAAA,OAAA,CAAS,wBAAwB,IAAK,CAAA,CAAA;AAAA,OACzC,CACA,CAAA,KAAA,CAAM,MAAM;AACT,QAAA,OAAA,CAAS,wBAAwB,KAAM,CAAA,CAAA;AAAA,OAC1C,CAAA,CAAA;AAAA,KACR,CAAA,CAAA;AAAA,GACL;AACA,EAAI,IAAA,OAAO,0BAA0B,SAAW,EAAA;AAC5C,IAAO,OAAA,qBAAA,CAAA;AAAA,GACJ,MAAA;AACH,IAAA,OAAO,MAAM,qBAAA,CAAA;AAAA,GACjB;AACJ,CAAA;AAEO,SAAS,iCAAoC,GAAA;AAEhD,EAAI,IAAA,OAAO,WAAW,MAAW,KAAA,WAAA,IAAe,OAAO,UAAW,CAAA,MAAA,CAAO,MAAQ,EAAA,MAAA,KAAW,UAAY,EAAA;AACpG,IAAM,MAAA,IAAI,YAAY,iDAAiD,CAAA,CAAA;AAAA,GAC3E;AACJ,CAAA;AAEA,eAAsB,8BAAiC,GAAA;AAEnD,EAAI,IAAA,OAAO,WAAW,MAAW,KAAA,WAAA,IAAe,OAAO,UAAW,CAAA,MAAA,CAAO,MAAQ,EAAA,WAAA,KAAgB,UAAY,EAAA;AACzG,IAAM,MAAA,IAAI,YAAY,4DAA4D,CAAA,CAAA;AAAA,GACtF;AACA,EAAA,IAAI,CAAE,MAAM,uBAAA,CAAwB,UAAW,CAAA,MAAA,CAAO,MAAM,CAAI,EAAA;AAC5D,IAAM,MAAA,IAAI,YAAY,4DAA4D,CAAA,CAAA;AAAA,GACtF;AACJ,CAAA;AAEO,SAAS,4BAA+B,GAAA;AAE3C,EAAI,IAAA,OAAO,WAAW,MAAW,KAAA,WAAA,IAAe,OAAO,UAAW,CAAA,MAAA,CAAO,MAAQ,EAAA,SAAA,KAAc,UAAY,EAAA;AACvG,IAAM,MAAA,IAAI,YAAY,0DAA0D,CAAA,CAAA;AAAA,GACpF;AACJ,CAAA;AAEO,SAAS,kCAAqC,GAAA;AAEjD,EAAI,IAAA,OAAO,WAAW,MAAW,KAAA,WAAA,IAAe,OAAO,UAAW,CAAA,MAAA,CAAO,MAAQ,EAAA,IAAA,KAAS,UAAY,EAAA;AAClG,IAAM,MAAA,IAAI,YAAY,wDAAwD,CAAA,CAAA;AAAA,GAClF;AACJ,CAAA;AAEO,SAAS,uCAA0C,GAAA;AAEtD,EAAI,IAAA,OAAO,WAAW,MAAW,KAAA,WAAA,IAAe,OAAO,UAAW,CAAA,MAAA,CAAO,MAAQ,EAAA,MAAA,KAAW,UAAY,EAAA;AACpG,IAAM,MAAA,IAAI,YAAY,0DAA0D,CAAA,CAAA;AAAA,GACpF;AACJ,CAAA;ACxEO,SAAS,qBAAwB,GAAA;AACpC,EAAI,IAAA,OAAO,WAAW,MAAW,KAAA,WAAA,IAAe,OAAO,UAAW,CAAA,MAAA,CAAO,oBAAoB,UAAY,EAAA;AACrG,IAAM,MAAA,IAAIA,YAAY,0DAA0D,CAAA,CAAA;AAAA,GACpF;AACJ","file":"index.native.mjs","sourcesContent":["import {\n    SOLANA_ERROR__SUBTLE_CRYPTO__DIGEST_UNIMPLEMENTED,\n    SOLANA_ERROR__SUBTLE_CRYPTO__DISALLOWED_IN_INSECURE_CONTEXT,\n    SOLANA_ERROR__SUBTLE_CRYPTO__ED25519_ALGORITHM_UNIMPLEMENTED,\n    SOLANA_ERROR__SUBTLE_CRYPTO__EXPORT_FUNCTION_UNIMPLEMENTED,\n    SOLANA_ERROR__SUBTLE_CRYPTO__GENERATE_FUNCTION_UNIMPLEMENTED,\n    SOLANA_ERROR__SUBTLE_CRYPTO__SIGN_FUNCTION_UNIMPLEMENTED,\n    SOLANA_ERROR__SUBTLE_CRYPTO__VERIFY_FUNCTION_UNIMPLEMENTED,\n    SolanaError,\n} from '@solana/errors';\n\nfunction assertIsSecureContext() {\n    if (__BROWSER__ && !globalThis.isSecureContext) {\n        throw new SolanaError(SOLANA_ERROR__SUBTLE_CRYPTO__DISALLOWED_IN_INSECURE_CONTEXT);\n    }\n}\n\nlet cachedEd25519Decision: PromiseLike<boolean> | boolean | undefined;\nasync function isEd25519CurveSupported(subtle: SubtleCrypto): Promise<boolean> {\n    if (cachedEd25519Decision === undefined) {\n        cachedEd25519Decision = new Promise(resolve => {\n            subtle\n                .generateKey('Ed25519', /* extractable */ false, ['sign', 'verify'])\n                .then(() => {\n                    resolve((cachedEd25519Decision = true));\n                })\n                .catch(() => {\n                    resolve((cachedEd25519Decision = false));\n                });\n        });\n    }\n    if (typeof cachedEd25519Decision === 'boolean') {\n        return cachedEd25519Decision;\n    } else {\n        return await cachedEd25519Decision;\n    }\n}\n\nexport function assertDigestCapabilityIsAvailable() {\n    assertIsSecureContext();\n    if (typeof globalThis.crypto === 'undefined' || typeof globalThis.crypto.subtle?.digest !== 'function') {\n        throw new SolanaError(SOLANA_ERROR__SUBTLE_CRYPTO__DIGEST_UNIMPLEMENTED);\n    }\n}\n\nexport async function assertKeyGenerationIsAvailable() {\n    assertIsSecureContext();\n    if (typeof globalThis.crypto === 'undefined' || typeof globalThis.crypto.subtle?.generateKey !== 'function') {\n        throw new SolanaError(SOLANA_ERROR__SUBTLE_CRYPTO__GENERATE_FUNCTION_UNIMPLEMENTED);\n    }\n    if (!(await isEd25519CurveSupported(globalThis.crypto.subtle))) {\n        throw new SolanaError(SOLANA_ERROR__SUBTLE_CRYPTO__ED25519_ALGORITHM_UNIMPLEMENTED);\n    }\n}\n\nexport function assertKeyExporterIsAvailable() {\n    assertIsSecureContext();\n    if (typeof globalThis.crypto === 'undefined' || typeof globalThis.crypto.subtle?.exportKey !== 'function') {\n        throw new SolanaError(SOLANA_ERROR__SUBTLE_CRYPTO__EXPORT_FUNCTION_UNIMPLEMENTED);\n    }\n}\n\nexport function assertSigningCapabilityIsAvailable() {\n    assertIsSecureContext();\n    if (typeof globalThis.crypto === 'undefined' || typeof globalThis.crypto.subtle?.sign !== 'function') {\n        throw new SolanaError(SOLANA_ERROR__SUBTLE_CRYPTO__SIGN_FUNCTION_UNIMPLEMENTED);\n    }\n}\n\nexport function assertVerificationCapabilityIsAvailable() {\n    assertIsSecureContext();\n    if (typeof globalThis.crypto === 'undefined' || typeof globalThis.crypto.subtle?.verify !== 'function') {\n        throw new SolanaError(SOLANA_ERROR__SUBTLE_CRYPTO__VERIFY_FUNCTION_UNIMPLEMENTED);\n    }\n}\n","import { SOLANA_ERROR__CRYPTO__RANDOM_VALUES_FUNCTION_UNIMPLEMENTED, SolanaError } from '@solana/errors';\n\nexport function assertPRNGIsAvailable() {\n    if (typeof globalThis.crypto === 'undefined' || typeof globalThis.crypto.getRandomValues !== 'function') {\n        throw new SolanaError(SOLANA_ERROR__CRYPTO__RANDOM_VALUES_FUNCTION_UNIMPLEMENTED);\n    }\n}\n"]}